[
  { "message": "Why do certain tags not need to be closed?" },
  {
    "message": "I found using the \"for\", \"name\", and \"id\" attributes a little confusing. I already know HTML , and everything about this just jumbled up my understanding of grouping together different label and input tags."
  },
  {
    "message": "I'm also wondering why each button or box needs it's own tag? Is it to prevent them from being mixed up with each other or something?"
  },
  {
    "message": "I’ve read in a few places about using more strict Doctypes than just !DOCTYPE html. Is there any major advantage to using a more specific DOCTYPE deceleration?"
  },
  {
    "message": "What would happen if instead of using a # to match it with an ID you just matched the value of an ID to an ID. For instance instead of and It is just and . I guess its just the way the code is written. ALSO what is the difference between using ID and For. Like when you code For=\"Blank\" versus ID=\"Blank\"."
  },
  {
    "message": "I had trouble with the indoor and outdoor part of the simulator. Without the video, I would have never realized that you had to put and tags for both indoor and outdoor separately. Why do you have to put both label and input tags for both indoor and outdoor? You have two lines for each and I don't understand why."
  },
  {
    "message": "Stefan Rojo\nDGM 1600-001\n10-14-19\n1- So I only have two challenges to go but when i was working on the freecodecamp.org to finish my challenges for tomorrow I came to a conflict that i don't get what the A anchor in the coding tag can do and how to do the radio button tags  and I've been put the both ending tags with it on one of the texts in the coding and It doesn't let me pass the challenge on one of the two so can you tell me how to do it?"
  },
  {
    "message": "When moving from one subsection of the assignment to another, I found that though the code I entered was correct the next assignments would have a variation that were structured more concisely than what I had previously. Will we be covering ways of effectively structuring our code to maintain an orderly appearance/neat workspace?"
  },
  {
    "message": "Is an attribute just a smaller part of an element? And can multiple elements be in one element? And what is the difference between a tag and an attribute because they both seem like smaller parts of an element."
  },
  {
    "message": "Does it matter if opening and closing tags are on new lines, alone on a particular line of code, or indented to a certain degree? If so, in which cases is it important to separate and distinguish tags, and when does it not impact the code's function?"
  },
  {
    "message": "What's the difference between Strict, Transitional and Fragment?"
  },
  {
    "message": "When originally learning HTML, it was taught to end self-closing tags with a slash, i.e.. I noticed that the lessons don't add the slash in the self closing tags. Which is the proper method?"
  },
  {
    "message": "When declaring a doctype, what's the purpose of the exclamation point at the beginning? The lesson mentioned it was important, but why?"
  },
  {
    "message": "I have never used radio buttons or checkboxes until this weeks lesson in codecamp. Why does each button or box need its own tag?"
  },
  {
    "message": "When I have created forms in the past, I have used the input tag to create the submit button:. freecodecamp.org had me create the submit button using the button tag: text in button. What are the advantages to using one method versus the other?"
  },
  {
    "message": "how do you use a browser fallback when it comes to background colors in any CSS coding?"
  },
  { "message": "What benefits does CSS grant opposed to other languages?" },
  {
    "message": "What would be the reason for entering more than one color for a specific text?"
  },
  {
    "message": "In Visual Studio Code, when I've created the CSS file and the HTML 5 file, do I still need to include the HTML in the CSS file along with the CSS? I thought I didn't need to but the editor automatically inserted the HTML into the CSS file. For example, it automatically put in the HTML for the divs into my CSS file. It seems like I can do either but is one of them better?"
  },
  {
    "message": "How do I know when I'll need to provide alternate fonts for if/when they degrade, and similarly, how do I know when a CSS variable will need a fallback? Do I need to provide fallback/alternates for everything, or are there certain values that are supported pretty much universally? How do I avoid needing to provide too many backup fonts/variable values in my code?"
  },
  {
    "message": "With CSS being capable of so many thing, are there times when you would want to use CSS to perform a task previously done by JavaScript?"
  },
  { "message": "How do you create a fallback value and what is the purpose?" },
  {
    "message": "When formatting the margins in your style sheet, is there a time when you would use the \"Top Bottom Left Right\" method over the clockwise method?"
  },
  { "message": "How does z-index relate to positioning exactly?" },
  {
    "message": "How common is it for the CSS to be in a styling section at the top of the html instead of in separate, linked external style sheets? Will this be something I run into constantly in my career, or just occasionally?"
  },
  {
    "message": "When would it be beneficial to use the style attribute or style tags over an external style sheet?"
  },
  {
    "message": "What are the differences or benefits between using an id tag or a class tag?"
  },
  {
    "message": "Flex box seems like such a useful tool, but I struggle to see the practical application of some portions. Like row-reverse or column-reverse, wouldn't it be more effective to rearrange the order of your HTML rather than fix the issue with CSS? It's like covering up the issue with a bandaid rather than stitching up the hole in your arm."
  },
  { "message": "What can't flexbox do?! - It's magic" },
  {
    "message": "I\"m a little confused as to what the difference between justify-content and align-content is?"
  },
  {
    "message": "Why do you not have to declare Display: flex when using properties like justify-content or align-items?"
  },
  {
    "message": "It's my understanding that flexbox's main purpose is to help design the layout of a page. When it comes to the layout are there certain things flexbox can't do where we would just have to rely on basic CSS alone?"
  },
  {
    "message": "Would a situation where flex-wrap: nowrap be used be when the container is in another container that says to use flex-wrap: wrap?"
  },
  { "message": "Why do float, clear and vertical-align not work with flex?" },
  { "message": "What are some scenarios where flex-basis should be used?" },
  {
    "message": "I noticed that sometimes freecodecamp would leave blank lines where I figured they meant for the new flex value to go. Is there any specific order to the values that works better than others? Are there some flex values that will contradict each other, like align-items and align-self? If that's the case, which values is it better to start with and which values is it better to override with?"
  },
  {
    "message": "What exactly does \"display: flex\" do? It allows you to use other flex properties, but on its own, it also seems to move around content on a webpage."
  },
  {
    "message": "Stefan Rojo\ncan you flex-shrink more than 5 colors at the same or does it have to be two colors at once?"
  },
  { "message": "Is 'flex-basis' the same as setting 'width'?" },
  {
    "message": "How does Atomic CSS compare to Bootstrap, PureCSS, or other CSS frameworks?"
  },
  {
    "message": "I know Git isn't required for this project, but if it were how often would I be committing my work?"
  },
  {
    "message": "Maybe this is self explanatory, but what exactly is the viewport?"
  },
  {
    "message": "Are media queries used for anything besides determining the size of the device screen?"
  },
  {
    "message": "When we copied some of the code from the website that would link us to our Github, how would we center the \"Github\" text in the center of the circle?"
  },
  {
    "message": "How does the VH padding work to fill the rest of the view port in the welcome section?"
  },
  {
    "message": "Two questions:\nIs is generally easier to build a webpage off of a framework, to build it form the ground up, or to build it with parts of code from an example site? Are there cases where different ones of these are more effective?\nAnd, what exactly is a media query, I'm still just a little confused on what they are/how they work/what they're for?"
  },
  {
    "message": "I believe we went over this in class but I don't remember! How do you make your site compatible on all platforms?"
  },
  {
    "message": "What is the best way to visualize a hierarchy for mental visualization for when there needs to be debugging in a page? I know we need to imagine every aspect of the page but is there a way to make this process even easier and more efficient?"
  },
  { "message": "Are Media Queries the only way to make a page responsive?" },
  {
    "message": "What is a good rule of thumb for how often we should be committing our changes to git? Like every 2 or 3 edits? I'm just curious to see how often experienced developers do that."
  },
  {
    "message": "Stefan Rojo\nHow do you make changes to your portfolio by using the nav bar?"
  },
  {
    "message": "Would it be possible to build a website that only opens on a single platform? For example, if I (for some reason) wanted my site to only work on mobile but not on desktop, is there a way to restrict access to exclude other platforms?"
  },
  {
    "message": "Is it best practice to build a website for one platform and then make changes so it is compatible with other platforms, or is it best to ensure compatibility for all platforms from the beginning? Like building a desktop site and then once you’re finish making it mobile compatible"
  },
  {
    "message": "Are you able to use Git Kraken instead for everything you do in the terminal?"
  },
  {
    "message": "Understanding the fundamentals of Git is important and puts into practice some of the concepts like push, pull that I use in GIT Kraken as well, but wouldn't we use formats like the latter the majority of the time to work on projects and repositories?"
  },
  { "message": "Is there a command that undoes a commit?" },
  { "message": "What is the point of nano \"....\" What does nano do?" },
  {
    "message": "I am struggling with the unit because I have never needed to use a command prompt before. In addition to the command line cheat sheet in the pages (thanks for that), do you have suggestions for where I can go to become more familiar with using the command prompt?"
  },
  {
    "message": "What do you do if your terminal doesn't seem to be executing commands, or doesn't appear to be working the way it should? Is there an override command to reset the terminal?\nWhat exactly is the terminal in the first place?"
  },
  {
    "message": "I'm still a little confused on diffs. How exactly do you correctly account for the changes?"
  },
  {
    "message": "The course mentioned adding your name and email anytime you use git so you can keep track of who does what, but how do multiple people work on the same project with git? Is there just a file on a shared server everyone is accessing?"
  },
  {
    "message": "Is git really a necessary thing to use? i find it to be more of a pain than anything."
  },
  {
    "message": "Is merging a branch just a shortcut to manually entering a change in the file in the directory or repository?"
  },
  { "message": "Does Git allow arbitrary conversion of contents?" },
  {
    "message": "Are the git commands we learned about case-sensitive? Like HEAD and ID were capitalized when the rest of the commands were not. Is it important that we always capitalize these specific labels or is that just how DataCamp chose to format them?"
  },
  {
    "message": "Stefan Rojo\nHow do i use Git Commit to when I have to enter a message in the log?"
  },
  {
    "message": "Maybe I missed it - why does the info stored in .git need to be in a hidden file?"
  },
  {
    "message": "Some functions, when called, have side effects and some do not. What is the difference?"
  },
  {
    "message": "If you are are working with an array with a lot of items, more than you can count, is there a way to locate the place number of an item in that array without counting it out?"
  },
  {
    "message": "You told us not to use \"==\", right? only \"=\" or \"===\"? If there are times where we should use \"==\" over \"===\" when would that be?"
  },
  {
    "message": "My biggest problem in this unit was that when a piece of code wasn't working, I had a hard time figuring out what was wrong with it to fix it and trying to figure out how the hints on freecodecamp were supposed to help me. So, if what we're trying doesn't work, what would be the best way to troubleshoot code and/or find an example of working code to base our own off of? Is MDN the best place for this type of issue? Or is there a better option for this particular issue"
  },
  {
    "message": "There were a few lessons on this one that I found frustratingly obtuse or rather esoteric to figure out the solution to, but there was one in particular I that left me scratching my head even after I got the solution. For \"Basic Javascript: Accessing Nested Objects\", the objectives recommend using dot and bracket notation to access \"myStorage\".\n\nHowever, I rammed my head against the wall for the better part of 15-20 minutes trying to figure out how to implement the brackets when it looked like just using dots would suffice. If there is a solution that fulfills the criteria with the brackets I'd like to know how to reach it since there might be something I'm missing here, and since this has been the most difficult material so far I definitely don't feel like I have a perfect grasp on it. Link to the specific lesson if that helps. EDIT: Nevermind, I've since figured it out and feel a bit silly about it; however, I do have another question concerning the solution requirements. The 1st requirement asks that \"gloveBoxContents\" should equal \"maps\" exactly. However, by accomplishing the dot and bracket notation for accessing \"maps\" I feel like the same objective is being completed, is there something to keep in mind about how they ask us to define it in such a specific way?"
  },
  {
    "message": "With the order of if and else if statements does the smaller number always go first? For example, does if (var < 5) always need to go before else if (var < 10) instead of if (var <10) and else if (var <5) etc?"
  },
  {
    "message": "Does javascript use nested loops? If so how exactly is it communicating the information to execute the code?"
  },
  {
    "message": "Is there a reason why you would use pop, push, shift and unshift to manipulate elements in an array as compared to doing it manually in the code?"
  },
  { "message": "Does javascript pass parameter by value or by reference?" },
  {
    "message": "Stefan Rojo\nhow do you add default options to your coding by using switching statements?"
  },
  {
    "message": "What is the difference between local and global variables and what is the point of them?"
  },
  {
    "message": "I am kind of confused by why there is both an equality operator and a strict equality operator. Wouldn't you always want to use the strict equality operator?"
  },
  {
    "message": "So, from what I understand so far, I can see some potential uses for declaring variables using let, but I don't quite see what we should be using the const term for. Are there going to be situations where we need to use const and var concurrently or can const pretty much entirely replace the var term?"
  },
  {
    "message": "I am struggling with the \"rest\" and the destructuring in the code camp ES6 challenges. Can we get an example of how to do these to help explain their instructions better?"
  },
  {
    "message": "Overall ES6 seems to really have some beniffits over traditional JavaScript. Are there any other major JavaScript updates since ES6?"
  },
  {
    "message": "I had a hard time with destructuring to assign variables to objects, what is the right syntax to use?"
  },
  {
    "message": "What kind of variables should we use const, var, and let to declare? I know they declare variables with different features, but when in our code would we be using each of them?"
  },
  {
    "message": "Can you give us an example of when we will use array or object destructuring?"
  },
  { "message": "What is the difference between a loop and a function?" },
  {
    "message": "Is there a practical benefit to using export default in a document where multiple things will be exported (other than the simple convenience of not having to use curly brackets on a single import)?"
  },
  { "message": "What does \"use strict\" mean/do?" },
  {
    "message": "In one of the challenges about import statements, it says: \" The lessons in this section handle non-browser features. import , and the statements we introduce in the rest of these lessons, won't work on a browser directly. However, we can use various tools to create code out of this to make it work in browser.\"\nWhy won't these features work on the browser directly? What tools do we use so that they will work?"
  },
  {
    "message": "Stefan Rojo\nHow do u import a default export by using a math function?"
  },
  {
    "message": "What is the significance and benefits of including 'use strict' at the beginning of a javascript source file?"
  },
  { "message": "What makes an import statement valid?" },
  {
    "message": "This is more of a clarification question, but are prototypes just values given to groups of objects?"
  },
  {
    "message": "Is Object Oriented Program the most common way to code with Javascript?"
  },
  {
    "message": "When working with data members, can protected versions be initialized in class directly?"
  },
  {
    "message": "Free Code Camp mentioned that \"this\" is used in many different ways and can get pretty deep. What other functions does \"this\" have?"
  },
  {
    "message": "Would you use a prototype in most cases where you have to repeat objects or objects properties? What would be the general situations where you would not use this, other than only having one unique property?"
  },
  {
    "message": "What's the difference between object orientated programming and what we were doing before?"
  },
  {
    "message": "is there a way to take user input to create a new constructor? IE a user can create a new card in our pokemon card assignment?"
  },
  {
    "message": "I'm a little confused as to when you should write functions that immediately invoke as opposed to functions that invoke when you call them."
  },
  {
    "message": "I'm still just a bit confused on the relationship between objects, prototypes, and constructors and what they are, exactly?"
  },
  {
    "message": "Stefan Rojo\nHow do you define a Constructor Function by using the specific strings for the data?"
  },
  { "message": "Is a constructor property common to use in coding?" },
  {
    "message": "it still works for me.  There was a thing where the website used all of its allotted bandwidth last month and it went down for a couple of days"
  },
  {
    "message": "Where does the camel style of typing come from? I also get thrown off as I accidentally uppercase the first since I need to do the same for the rest of the words in a property."
  },
  {
    "message": "wouldn't the \"for ...in\" statements be replaced with forEach?"
  },
  {
    "message": "I didn't understand the for..in statements. What's the benefit?"
  },
  {
    "message": "Is push(), unshift(), pop(), and shift() better to use than splice() or visa versa? Or does it not matter, because its two ways to get one thing done?"
  },
  {
    "message": "One of the earlier modules had us use the push() and unshift() inside of the loop but all the way to the side and had the return underneath this. Are we supposed to do it this way in normal coding life? It seems a little strange to me"
  },
  {
    "message": "I see that with unshift() and push() we can add items to the beginning and end of an array, but are examples of when we use this"
  },
  { "message": "I don't really understand how using splice works" },
  {
    "message": "I had a hard time understanding the idea of copying an array with the spread operator.  in the exercise we had to push the newArr, but I don't understand why.."
  },
  {
    "message": "I see that with slice() and splice() we can get information from one point through another, but is there a way to get  every other piece of information instead of just continuous data?"
  },
  {
    "message": "Still a bit confused on the for...in statements and how they differ form other loops."
  },
  {
    "message": "What is the purpose of creating prototypes inside of prototypes?"
  },
  {
    "message": "i don't quite understand why we would need to immediately invoke a function expression?"
  },
  {
    "message": "I am also still a bit confused on what the prototype and also the supertype does and why we need them."
  },
  {
    "message": "Are there any limits that a constructor can have? Like the amount of variables? Or adding new identifiers to it?"
  },
  {
    "message": "I was understanding the exercises until I got to this. How does the .hasOwnProperty(property) syntax work?\n\nfor (let property in duck) { if(duck.hasOwnProperty(property)) { ownProps.push(property); } else { prototypeProps.push(property); } }"
  },
  {
    "message": "I don't quite get how the override part works.  Why does that override the fly() ?"
  },
  {
    "message": "I'm also confused about what the prototype is, what is does and why we need it. How does it tie in to the constructor and everything else?"
  },
  { "message": "Still a bit confused with what prototype actually does." },
  {
    "message": "\"When an object inherits its prototype from another object, it also inherits the supertype 's constructor property.\"\n\nI am confused by this.."
  },
  {
    "message": "From what I understand, is this basically just practicing trying to manipulate and add data to objects programatically instead of manually?"
  },
  {
    "message": "So i'm still a little confused on what the purpose of the constructor is. I understand the whole this.name kind of thing, but back to when it had us do Dog.name inside the function instead of just name, what exactly does that do differently?"
  },
  {
    "message": "Is there any real benefit to using ' over \" when they both function the same if used correctly (as in used as the outer layer, compared to /\" )?"
  },
  { "message": "What are some examples when you would use \"use strict\"?" },
  {
    "message": "I was able to figure out deconstructing, but I don't quite understand when I would use it practically."
  },
  {
    "message": "Is \"var\" used at all in ES6 or is that something that was left behind when they made the move to \"let\" and \"const\"?"
  },
  {
    "message": "I was wondering about deconstruction and wanted to see more examples of its use."
  },
  {
    "message": "When it comes to destructuring, can I remove multiple areas of an array or just the beginning and the end?"
  },
  {
    "message": "Are we even supposed to use var anymore? Or is let and const just a better alternative. Also, is there times when var WOULD be ideal?"
  },
  {
    "message": "if we already know we are going to be reassigning numerous elements of an array, is it still better to stick with const or just leave it as a var/let system?"
  },
  { "message": "why exactly do we use 'use strict'?" },
  {
    "message": "can you help me understand setters and getters? And the \"class\" \"constructor\"? I was able to do the problems, but had a hard time conceptualizing them"
  },
  {
    "message": "Could they not make it super confusing by having Java and Javascript be so similar name wise but totally different practically?"
  },
  {
    "message": "Still confused on why we even use Javascript. Like whats the purpose and goal?"
  },
  {
    "message": "I didn't understand how at the end of some lessons they had a section:\n// Change these values to test your function\n\nI would change them, and nothing would happen. I thought this was a way to check my work.\nThat is something I struggled with, not being able to see the results of the coding."
  },
  {
    "message": "What are some of the best applications or most creative applications you have seen Java Script used for?"
  },
  {
    "message": "I'm stuck on Generate Random Whole Numbers within a Range. I understand what it's supposed to do, but not sure what part I am missing."
  },
  {
    "message": "It was really difficult for me to figure out the \"Quoting Strings with Single Quotes\" Section.  It tells you to take out the slashes and the quotations, and I feel like I was doing that and still getting it wrong."
  },
  {
    "message": "I struggled with the else if concept. Could I get some explanation as to why we use that and not just if and else separately?"
  },
  {
    "message": "I struggled with case and if else statements. Could we go over when you would use one over the other?"
  },
  {
    "message": "It took me a while on the case ones, to realize you change the case 1, case 2, etc to case \"bob\", etc. Could we go over when you would use this vs when you would use if else statements?"
  },
  {
    "message": "can we go over the Record Collection? That one was complicated.  I had to look it up"
  },
  {
    "message": "I really struggled with the concept of the \"Mad Libs \"style word game at first. What is the advantage of adding all of the spaces individually in the string as opposed to just having the space come after the word in the wordBlanks function?"
  },
  {
    "message": "I don't understand the purpose of doing calculations in Javascript with + - = \\ *. Why would you need to do them?"
  },
  {
    "message": "Are there specific benefits to Git? I've heard its used worldwide but I don't understand the appeal."
  },
  {
    "message": "I probably just need more practice, but it’s hard to wrap my head around git. I understand its general purpose, which is a developer can save, track, and collaborate on projects. But I don’t see it like I did the HTML, CSS, and Flexbox. Is there a way to understand git better like the flex box help site?"
  },
  {
    "message": "why does one have to do control o --> enter --> and then save file using control x? is that only for nano or every time?"
  },
  {
    "message": "So Git seems to allow you to do a lot of the same things that a file explorer does. What are the advantages of using Git over a file explorer?"
  },
  {
    "message": "I feel like I need/want to learn more about using git commands so that i can be good at it. Is there other practice sites or ways to immerse myself in the practice?"
  },
  {
    "message": "Is the terminal more frequently/easily utilized with a Mac compared to Windows?"
  },
  {
    "message": "I've noticed that sometimes if I want to make a message, I have to use 'git commit -m \"Hello\"',  but sometimes I used amend in there as well. What's the difference and when would I use those?"
  },
  {
    "message": "I'm still trying to wrap my brain around this. How are branches created? Are they just two versions committed at different times? Are branches created intentionally?"
  },
  {
    "message": "I'm still a bit confused on the overall use of git. I understand it's kinda like a save system to go back to previous save points but why all the other stuff? I kinda need a simplified explanation."
  },
  {
    "message": "is there any other Git learning resources that builds on the lessons more intuitively? The datacamp practices are good but to me it seems less cohesive, or maybe I'm missing something :)"
  },
  {
    "message": "So why do we have to use the command prompt with Git? Is there an easier system that does all this just with the folders we have? In MY opinion, it would be faster, because some file names can take up a long time to type out"
  },
  {
    "message": "Is there a best website or document with all the commands we should know for git? I imagine we don't have to memorize them all."
  },
  {
    "message": "It seems that the script we added could go anywhere in the body of the code. Is that true, and why? Maybe this is a Javascript questions."
  },
  {
    "message": "Is there only one way to position something so that it is in the view point or are there multiple?"
  },
  {
    "message": "I am having a hard time with one of the requirements on this, I can't get the height of my welcome section to match the height of my viewport.  I'm confused as to what is included in a viewport."
  },
  {
    "message": "Is there some trick to get the 12th test to pass? I have tried a lot of things and the nav bar stays at the top even when scrolling but the test won't pass."
  },
  {
    "message": "Are there times when you would want the nav bar to follow you down, and times you would not? Like I understand it is a design choice, but are there times where it would make more sense to use one over the other, personal preference aside?"
  },
  {
    "message": "I had a hard time aligning content (especially the projects). This figures like to add extra width by default and it was confusing on understanding how to get rid of it so that I could better align things. Everything else seemed understandable."
  },
  {
    "message": "How can I be open to explore different options to solve the problems presented when tests like this one require me to solve the problems in a specific way? I was able to do everything they asked, but I didn’t do it the exact same way as them. Does that mean what I did was wrong? Is there way the only correct way? I thought there were multiple solutions to the problems in coding."
  },
  {
    "message": "In the example there is no flex. Is it better to always use flex? Or does it depend? What does it depend on?"
  },
  {
    "message": "Is media query the best way to make the webpage responsive? Are there other tricks besides flex that would make the page responsive? And then what are the general conventional standards for all responsive websites? Basically in the future can i just cut and paste the standards and not think about all of the dimensions that i need?"
  },
  {
    "message": "I got stuck on the Flex Shorthand, mistakenly thinking you needed commas between each unit"
  },
  {
    "message": "Should CSS Flexbox be used to organize and sort tables, and if so, how would that be performed?"
  },
  {
    "message": "How does flexbox react to different sizes of screens/windows (or different devices)?\nIs there ever a time where using flexbox is disadvantages? Or is it generally better?"
  },
  {
    "message": "Would Flex box be considered the easiest way to structure your overall layout?"
  },
  {
    "message": "As we learn more of the design side of web development, does flex box become more obsolete or does it remain a staple part?"
  },
  {
    "message": "I would like to understand flex-basis better. Why would it be important to define the size of a flex item if the item itself is already defined by height and width?"
  },
  {
    "message": "are the terms justify-content and align-items interchangeable? Will it produce the same result?"
  },
  {
    "message": "You can change the location of an image or something using normal html, is flexbox just a more convenient way to do that?"
  },
  {
    "message": "How come it works properly on free Code camp, but not when I try to implement it into my code?"
  },
  {
    "message": "I still don't understand what the css tag \"justify-content\" does and what it's purpose is, I know it might be a dumb question but I'm not sure what it does exactly."
  },
  {
    "message": "Does the display:flex; need to be applied to every class or does it affect its children as well? I'm guessing it acts as just a container placer but I noticed needs to be applied sometimes on child elements. Maybe I'm wrong though. Just a simple explanation would be nice."
  },
  {
    "message": "Is there a good way to test the shrink and grow properties so that you can get your items the right sizes across platforms, or is it simply trial and error?"
  },
  {
    "message": "For Flex Boxes what is the difference between the order property location and flex shrink? they seemed to fulfill the same function."
  },
  {
    "message": "Should you try to use Flexbox as much as you can so that the website is responsive as it can be? Or are there times that you wouldn't use Flexbox and maybe a possible alternative?"
  },
  {
    "message": "Would it be better to rearrange objects in the code or simply use the order property to do it? Does it not really matter to be semantically correct?"
  },
  {
    "message": "Is flex shorthand property considered better than the individual properties, or is the “correct” code based on preference?"
  },
  {
    "message": "is flex-box responsive to computer screen sizes, cell-phone screens and tablets? If not what is the code that makes your website responsive?"
  },
  {
    "message": "Is there any way to make an easy system to switch in numbers and colors in a more efficient manor?"
  },
  {
    "message": "Do web designers deal with css more than developers or is it something both use equally as much?"
  },
  {
    "message": "I'm trying to figure out a situation where I would use an ID instead of a class."
  },
  {
    "message": "If a h1 has a respective style class, a set class attribute, and a inline style all with a stipulation for a color. Which style stipulation overrides the others and why?"
  },
  { "message": "Can you clarify what is :root and how does that work" },
  {
    "message": "what's the purpose of writing out the different colors if you are going to put !important to override the other colors?"
  },
  {
    "message": "Why do you need a :root when creating variables? Don't both do pretty much the same thing? And what else can you do with :root that does not include variables? Also explain more about variables. How to use and such."
  },
  {
    "message": "I'm not sure I understand the difference between ID attributes and Class attributes? What is the advantages of using one over the other?"
  },
  {
    "message": "My question would be what is the difference when using CSS in line compared to doing it on its own sheet? Does one work better than the other?"
  },
  {
    "message": "One question that I had is if there is a difference in the use of the hex codes and rbg codes? Is there situation to use one over the other?"
  },
  {
    "message": "I still have a little trouble understanding what em and rem do exactly. I know when you have px's it is a set distance, is it just auto? and what's the difference between the 2? (like in freecodecamp it said that em is used on the padding's font but how does it calculate how much to actually go on)"
  },
  {
    "message": "I am also confused by the variables and :roots. Why use them instead of class and id? Why are their “starting” symbols different from other Symbols? How do the variables and :roots affect the hierarchy of rules in a CSS page."
  },
  {
    "message": "Why would you style things multiple ways if you could just use !important to make sure that what you want displayed is displayed?"
  },
  {
    "message": "I've never used CSS variables. How is that preferable to just assigning those elements the same class, especially if they are not supported on all browsers (like IE?). I might be missing something on what makes their application particularly useful or different."
  },
  {
    "message": "does in style CSS take absolute priority? ex vs an id tag or a class"
  },
  {
    "message": "What is the benefit of putting the styling of a document in the same file as the html like they do in FreeCodeCamp? I usually do the css and the html in separate documents, so I am curious as to why they put them in the same place and if there is some kind of benefit that I am not aware of?"
  },
  { "message": "How do you reassign key values in data sets?" },
  {
    "message": "In the challenge when using a for statement to iterate through the keys of an object, the only way I could get my loop to work was to specify what I was iterating through was an object ( if ( obj [user].online === true )).  Will using obj in front like that always be necessary?"
  },
  {
    "message": "Is indexOf() only used in other statements? What would be the purpose of returning a -1?"
  },
  {
    "message": "I noticed there are several ways to add items (push(), unshift(), splice()) are any of those a preferred method?"
  },
  {
    "message": "Which data structures are applied when dealing with a recursive function?"
  },
  {
    "message": "It was recomended in class that we use map, reduce, or filter, but free code camp had use a for loop. Which is it?"
  },
  {
    "message": "When referencing an object in a function, is there an upside to adding 'Obj' at the end? For example: \"user.data.friends\" vs \"userObj.data.friends\". I found that using both works but wasn't sure if there is a benefit to adding \"Obj\"."
  },
  {
    "message": "Why are there multiple methods by which to call a key value? i.e. -  fruits.banana or fruits['banana']"
  },
  {
    "message": "Is there a way to reassign a key in an object?\n\nlet foods = {\n\napples: 25 ,\n\noranges: 32 ,\n\nplums: 28\n\n};\n\nCould you change \"apples\" to \"bananas\" for instance while keeping the value as 25?"
  },
  { "message": "Is IIFE mainly used to make code more secure?" },
  {
    "message": "What is the easiest way to differentiate between polymorphism and inheritance?"
  },
  {
    "message": "I understand the core concept of procedural programming, but why in object-oriented programming do you not have to declare all of the different parameters for an object?"
  },
  {
    "message": "I'm curious what some real use-cases for objects are outside of database stuff."
  },
  {
    "message": "I was confused by what exactly a mixin is. Is my understanding correct that they are a mix of two unrelated objects? What would be a real world example of when to use a mixin?"
  },
  {
    "message": "In the lesson for \"Understand own Properties\", in the for loop it uses \"(let property in canary)\". What exactly does that statement do? Is that where it sets the variable \"property\"? If so, how does that one name include every \"property\" variable?"
  },
  {
    "message": "What are some of the uses for immediately invoked function expressions (IIFE's)? I'm a bit unclear on when you would want to use one."
  },
  {
    "message": "In normal use, are objects used almost entirely for databases/info storage, or are they used elsewhere? It seems like they're very useful for API's, but outside of that, it's a massive data file for the sake of one's main JS file being smaller. What is the everyday use of these complex data structures?"
  },
  {
    "message": "The section on the prototype chain was a little unclear.  It says that a prototype is an object, and a prototype can have its own prototype? So is it a smaller object within another object? It's hard to see where the chain would end."
  },
  {
    "message": "Does destructuring allow you to assign just one value to multiple variables or assign multiple values to multiple variables?"
  },
  { "message": "in es6 should var only be used for global variables?" },
  {
    "message": "When exactly would we use \"create strings using template literals?\""
  },
  {
    "message": "So in the lesson it states that we can only have one value be a default export in each module or file. I'm not quite exactly sure as to why that is there, is there a specific reason for it I'm missing or maybe just looked over?"
  },
  { "message": "How many different ways are there to declare a variable?" },
  {
    "message": "What exactly does it mean by the contents of an array are \"spread\"? I don't fully understand this."
  },
  {
    "message": "On \"Write Higher Order Arrow Functions\" it's unclear to me what it means when it says \"use strict\" in the code. I also don't feel like I really understood map(), filter(), and reduce()."
  },
  {
    "message": "Does the export feature create a new file, or is it only added to an existing file?"
  },
  {
    "message": "What is the best way to handle ensuring datatypes, as well as math functions (squaring numbers)?"
  },
  {
    "message": "What is the typcial website usage for reductions, imports and so on? Adding items to arrays or merging arrays seem like powerful tools. Are these solely back-end functions for database manipulation, or would these also be used on the front-end?"
  },
  {
    "message": "What exactly do the \"higher functions\" map(), filter() and reduce() do? We had to use them to pass one of the objectives but they weren't ever really fully explained."
  },
  {
    "message": "What's a good way to keep the wording of different languages separate in my brain?"
  },
  { "message": "Could you have a for loop inside an array?" },
  {
    "message": "I find JavaScript very interesting but I am still confused as to what it's actual use is, I'm sure that knowledge will come. Is JavaScript for those that are looking at the code or is it for the way your coding is used?"
  },
  {
    "message": "Why are strong values considered immutable and cannot be changed? Is there a specific reason for it or is that just the way it Is?"
  },
  {
    "message": "When using parseInt() with a radix, what is the common use? The practice assignment uses binary code. However, it seemed like there could be a broader application for the function."
  },
  {
    "message": "I've always heard % referred to as the modulus operator, but freeCodeCamp was very specific in calling it the remainder operator. What is the difference then between modulus and remainder?"
  },
  {
    "message": "Why does javascript use i to increment things? Do you have to use i?"
  },
  {
    "message": "What exactly is the purpose of the string plus equals operator?"
  },
  { "message": "Does JavaScript change as often as other web languages?" },
  {
    "message": "Are there any sort of \"shortcuts for accessing multi-dimensional arrays? I can see it getting really confusing really fast using language like myArray[1][3][7] etc."
  },
  { "message": "How is Math.random() useful in real coding?" },
  {
    "message": "When using a switch statement, is there a good way to condense multiple cases when you have a lot of cases?"
  },
  { "message": "How do you use the 'isNaN' function exactly?" },
  {
    "message": "When using do-while loops, is there ever a time that we'll need to increment our counter/i within the while loop? In the examples shown, i was only incremented in the do portion of the loop."
  },
  {
    "message": "After merging in an exercise, git told me that I made a \"fast-forward merge\". What does that mean?"
  },
  {
    "message": "I kept getting this banner at the end of the excercise over and over and even when i typed it in correctly git would not allow me to continue\n\nIf the git pull went well, you should have 16 commits in your repo, but you don't. Make sure you use git pull origin master. If you want to avoid the editor from opening, you can use the --no-edit flag."
  },
  {
    "message": "How many commits can you have? Enough to see the file from beginning to end?"
  },
  {
    "message": "When merging two branches, what does it mean by \"if changes don't overlap\"?"
  },
  {
    "message": "Say I have a folder under user/desktop/ on a mac. How would I connect a folder in that location to GitHub? creating a repository is easy, but mapping it to GitHub adds a new challenge."
  },
  {
    "message": "I still don't fully understand the @@ line of a diff. I understand that the first number is the start line and the second number is the number of lines changed, but what doe the + or - signify?"
  },
  {
    "message": "What are, if any, drawbacks to using something like GitKraken as opposed to GitBash? If you know what's going on under the hood with Git does it matter which one you use?"
  },
  {
    "message": "What is the \"cat\" command? Also, the terminal is buggy and doesn't realize you actually complete a task unless you reload the page."
  },
  {
    "message": "On a couple of the exercises I did it correctly but it would freeze or not acknowledge it so I had to refresh the page and re-enter the solution to move on."
  },
  {
    "message": "There was a random 'cat' statement in the lesson that I don't understand. What exactly does it do?"
  },
  {
    "message": "Could you go over \"How do I restore an old version of a file\" in section 3? I couldn't find the hash for the second step of the lesson and I'm unsure if it was user error on my part or if the terminal was showing me the wrong numbers."
  },
  {
    "message": "One of the questions I keep getting an error. It says it looking for a \"ls\" in the output."
  },
  {
    "message": "Is there software or a scripting service that catches errors or helps fix mistakes in real time as you code?"
  },
  {
    "message": "I finally made the page pass all the tests but some of the tests seemed to get limit design decisions."
  },
  { "message": "What is a media query?" },
  {
    "message": "When creating a website, is it considered better (in the industry) to use a service like Netlify for making it public, or to create ones own setup with a host like Stack or AWS?"
  },
  {
    "message": "Do media queries have another purpose besides changing what you see at certain sizes?"
  },
  {
    "message": "In what type of situations would you use the tag correctly? I know that certain browsers like it or they don't like it."
  },
  { "message": "I don't really understand how to use media query in coding." },
  {
    "message": "Do we have to implement a specific library or something to get flexbox capability on our websites?"
  },
  {
    "message": "What would be the reason for using a section tag over a div tag?"
  },
  { "message": "Is it best to split up sections of the with tags?" },
  {
    "message": "When we set up an element to take up a certain portion of the screen, will that adapt to any device like a cell phone or tablet?"
  },
  {
    "message": "What's the best way to make the height of the welcome section match the viewport while keeping the text of the welcome section centered (vertically) in the screen?"
  },
  { "message": "are there signal flow rules for using flex?" },
  {
    "message": "Is it okay to use percentages in paddings or margins on flex items at all? If not, then why not?"
  },
  {
    "message": "Is it better to use Flexbox to create responsive web pages as opposed to media queries?"
  },
  {
    "message": "With flex-wrap, what determines when something will wrap and when something will shrink itself and stay in the same row/column? Is there a way to specify the max/min width an object will grow/shrink to before it decides to wrap onto the next row?"
  },
  { "message": "How do you center an image?" },
  {
    "message": "when would one differentiate when they are to use the align-self property vs. the align items property?"
  },
  {
    "message": "Will Flex properties obey other responsive design settings? (@media, screen sizes)"
  },
  {
    "message": "When/why is 'order' used in the industry, as opposed to just moving an html item so it does appear after/before a desired object? Order just seems like an extra step to avoid fixing an earlier html error."
  },
  {
    "message": "If we have multiple flex properties on an element, are certain properties held at a higher priority than others, or is it just the order in which they are typed in?"
  },
  {
    "message": "With the align-items and justify-content properties both being used to align elements, are there situations that call for one to be used specifically? Or is it just preference?"
  },
  {
    "message": "Can any of the CSS Flexbox applications cancel each other out so nothing will happen?"
  },
  {
    "message": "In the Flexbox Froggy activities, we learned that flex-flow is the shorthand for a combination of flex-direction and flex-wrap since they are often used together. Are there any other shorthands that would make flexbox more easy?"
  },
  {
    "message": "Do you apply flex-direction to individual elements to make them line up in rows and columns? Or do you apply it to groups of elements in order to make them line up? example: apply flex-direction to an un-ordered list, and a paragraph tag individually, or to a div wrapped around both of them?"
  },
  {
    "message": "I for some reason had an extraordinary amount of difficulty with the [attr=value] attribute selector to style the checkboxes, i dont know what i was doing wrong but i was not able to figure it out"
  },
  {
    "message": "How useful are CSS variables at this point? Is it better to just focus on other frameworks for variable needs?"
  },
  { "message": "Can ID's and classes be used interchangeably?" },
  {
    "message": "when using attributes to style our elements, it says we can \"select custom groups of elements..\", are these groups something we can define, or does it only apply to predefined things like checkboxes, radio buttons etc?"
  },
  {
    "message": "What is the easiest way to center text, images, and other elements on any screen?"
  },
  {
    "message": "What is the big difference between id and class in CSS? Is there one that you would recommend using over the other or is it just whatever your feeling at the time?"
  },
  {
    "message": "Does CSS code always go in between a marker? are there other markers that it goes in between?"
  },
  {
    "message": "In Free Code Camp we used media query to change color based on screen size. Can all attributes of the page be changed in this way? Is this one of the ways web developers build pages that are responsive to mobile users?"
  },
  {
    "message": "When are variables used the most often in CSS? When should you start using them as your code gets bigger?"
  },
  {
    "message": "Is it standard in the industry to have your CSS and HTML in the same doc, or to have an HTML doc linked to a stylesheet?"
  },
  { "message": "Does it matter the order you put CSS in?" },
  {
    "message": "Is using the hyphen case when naming classes or variables the common practice in CSS?  Are using other cases such as camel, pascal, or snake case also accepted?"
  },
  {
    "message": "If em is based on the size of an element's font, what is rem?"
  },
  {
    "message": "We changed the width of an image, but we didn't change the height. Is it every necessary to change the height of an image?"
  },
  {
    "message": "Do CSS variables trump ID's and classes, or is it the other way around? Variables seem like they have the same importance as !important."
  },
  {
    "message": "When are we supposed to utilize the tag? i do not quite understand its necessity or purpose."
  },
  { "message": "When do you have to use the tag? Is it always necessary?" },
  {
    "message": "Instead of radio buttons being limited to just one being selected at a time, is there a way we can set them up so that a user can select a specific amount like two or three?"
  },
  {
    "message": "I'm only about half way through the section, but there is one that says that the target=\"_blank\" attribute causes the link to open in a new tab. Is that what that always does? or does it have some other purpose and the new tab is a sort of 'side effect' to that?"
  },
  {
    "message": "During the course, I found myself using copy/paste quite a bit, especially when making labels. Is this a good practice to get into for html or is it something I should avoid using?"
  },
  { "message": "Is there a way to remember the basics of HTML?" },
  {
    "message": "Just so I'm clear, is the point of nesting a tag inside a tag just so things like search engines can easily see what the most important part of a document or app is?"
  },
  {
    "message": "I'm not very familiar with using the newer tag called \"\". How do you use it exactly?"
  },
  {
    "message": "In html5, when is it appropriate to use the tag? I've seen it used just within the tag here and there, but have never understood its standard use."
  },
  {
    "message": "Which then would be the best language for a designer to learn, if the languages have different functions?"
  },
  { "message": "Are id attributes used for anything besides links?" },
  {
    "message": "We learned that the div tag is probably the most commonly used element. What exactly is it mostly used for? I understand that it's a container for other elements, however, I don't fully understand why it is commonly used. Is it mostly for organizational purposes?"
  },
  { "message": "Does the tag do anything visually?" },
  {
    "message": "I'm just curious if there is anything else that is typically used at the top of an HTML page around the doctype tag?"
  },
  {
    "message": "The radio buttons we used in this part of the freecodecamp can't be unchecked. Once you toggle one, you have to keep one of the radio buttons toggled. Is there a way to make radio buttons that can be unchecked, but unlike checkboxes you can still only select one?"
  },
  {
    "message": "I didn't really have any questions on this section. It all made pretty good sense to me."
  },
  {
    "message": "This section was pretty easy to complete, no questions as of right now."
  },
  {
    "message": "Compared to other sections this seemed easier to do. I did have a little bit of confusing on IFFE's but I think I have it figured out after more practice."
  },
  { "message": "As of yet, no questions!" },
  {
    "message": "I had no questions from this section. I feel like this was an easier section than others."
  },
  {
    "message": "I have a hard time understanding the concept of the \"Prototype Chain\""
  },
  {
    "message": "This section isn't too bad so far, but I would like to know when this is used in the real world."
  },
  {
    "message": "My main experience with Object Oriented Programming is with Java, since I transferred from SUU. In Java, and other object-oriented programming languages of course, you can make classes and have classes inherit from eachother. So I guess Javascript not having classes is tripping me up a little."
  },
  {
    "message": "What's the best way to keep properties organized when working with objects? All the different kinds of inheritance has left me a little confused."
  },
  {
    "message": "This whole lesson was way easier for me to understand than any of the others.  I hardly needed any hints...just at the end...the last few, specifically with IIFEs.  Id appreciate going over those for a minute if you think we need to know how to use them later...especially if needed in our project."
  },
  {
    "message": "No questions currently. I found it straight forward and easy to understand."
  },
  {
    "message": "I will keep you posted. Working on it a little bit so far. Need to do more before I can give you a better answer."
  },
  {
    "message": "Can you have multiple constructors for an object type at once like you can in other programming languages?"
  },
  { "message": "no questions for this section! it was nice and made sense :)" },
  {
    "message": "I also am wondering about IIFE stuff. If they are immediate does that mean they don’t follow the top to bottom reading  that everything else follows?"
  },
  {
    "message": "I was also able to complete the exercises quite easily and didn’t run into any problems. So I don’t currently have any questions for this section."
  },
  {
    "message": "These exercises were easy enough to get through, but I also don't understand the circumstances under which I would use IIFEs."
  },
  {
    "message": "no questions from me on this one, really liked how much more simple this was to understand compared to initially diving into the javascript and Es6 module lol..."
  },
  {
    "message": "For IIFEs, what does it mean exactly to be invoked immediately? I'm not entirely sure I understand how this behavior differs from a called function. Maybe because I'm not sure what functions would need immediate execution, and how that would look in a practical sense of a specific example."
  },
  {
    "message": "I had a very hard time with destructuring and the spread operator...could NOT get it. Then the one...the difference between import and require...I swear I checked it so many times and submit it and I still think I am right, but its not accepting it. It seems simple enough, so I am hoping its a bug and not me..."
  },
  {
    "message": "I didnt really have a question. I just struggled with the destructuring. I never quite figured it out."
  },
  {
    "message": "Where is another place I can practice writing these functions? I feel like I just got my feet wet but still have no idea what I'm doing."
  },
  {
    "message": "I would like more practice with this. How often is ES6 used in the workplace?"
  },
  {
    "message": "I have been having issues with using the spread or ... in the function parameters. Any tips? I have checked the tips and resources but I still struggle a little bit on that part."
  },
  {
    "message": "How prevalent is ES6 in the professional web development scene? Is knowing ES6 a common thing in the workplace, or is it viewed as something more niche? Maybe it will develop into something essential in the future, or it already is essential?"
  },
  {
    "message": "I am definitely struggling with the  higher arrow functions .... Looking into other sources /areas to try and better understand it."
  },
  { "message": "I'm still confused about map(), filter(), and reduce()." },
  {
    "message": "I'd like to get a better understanding for what the arrow function does. I'm pretty confused on when to use it and what exactly it does. Having the lovely nickname of \"syntactic sugar\", I am assuming it can be pretty useful."
  },
  {
    "message": "I was doing okay until I got to the => functions. I imagine I'm missing something fundamental and I'll have to do the six hour JavaScript challenges all over again to understand it. To people in this class who feel hopelessly lost, you're not alone. This is one of the most difficult concepts I've ever tried to learn, and I'm struggling hard, and have been so since we started learning GitHub. Don't be discouraged."
  },
  {
    "message": "I was getting a bit confused while learning the arrow functions as well. I got stuck when combining map(), filter(), and reduce()."
  },
  {
    "message": "I did good on ES6 until it came to destructing objects. I can't seem to wrap my head around how to do it"
  },
  {
    "message": "map(), filter(), and reduce() were really upsetting and confusing me.  I would love to deep dive into those more. Side note; I was really frustrated with these tests because I was putting in everything correctly and freecodecamp either glitches or just was not working because it wasn’t submitting. I spent a lot of time trying to figure out what I was doing wrong, but it ended up just being some sort of glitch."
  },
  {
    "message": "I couldn't figure out the Rest Operator. How does it work and what are the benefits of using the Rest Operator?"
  },
  {
    "message": "I would like it if we could go more in-depth on using arrow functions as well. Also when combining with map(), filter(), and reduce(). Like Kristin, I was doing okay until we started combining them then it became confusing."
  },
  {
    "message": "I will keep you posted but one thing I have been wondering is when to use certain languages and what are the easier options?"
  },
  {
    "message": "Not so much a question as a trouble point: if we could go in depth on using destructuring and arrow functions, I think it might be nice to get them explained better than FreeCodeCamp or other online sources I read have."
  },
  {
    "message": "This set of lessons really frustrated me because I had to go to outside sources in order to know how to set up and call the new features - even what the new features actually did wasn't on the freecodecamp site.\nSo my question is: where can I go to get a firmer understanding of what things like .reduce() do and different things to do with classes and calling different modules from different files and other stuff like that...?"
  },
  {
    "message": "Why would the improved method be using a \"class\" instead of a regular function, when if you use them you have to add using a constructor as well with the constructor being nestled inside the class? This to me seams like more stuff that you need to add, with the possibility of forgetting."
  },
  {
    "message": "I can tell that the higher order arrow functions using map(), filter(), and reduce() are going to be really useful. It's a little confusing to me when we start combining them though. Maybe we could talk through the logic on a couple of examples?"
  },
  {
    "message": "I actually have a couple questions:\n1) With JS being so high level, why does it need to be so convoluted in comparison to say, python?\n2) It seems like semi-colons are the only real way to work. Without them, it's too ambiguous to be a robust/clear program, so why are they not enforced?\n3) Javascript is blazing fast for a high level language. Why do they not simplify the syntax and ecosystem?"
  },
  {
    "message": "Something that I was confused with was the record collection section."
  },
  {
    "message": "I have no clue how to escape sequences between strings. Does each string need a space between the escape characters?"
  },
  {
    "message": "In the .push example I thought i followed it exactly...didn't work.  I clicked on the hint & the hint is the exact same as the example...not helpful. mad face. what am i missing?"
  },
  {
    "message": "At this very moment in time I actually can’t think of any questions, JavaScript makes a ton of sense. But I am sure questions will come up eventually so I will post it here when they do."
  },
  {
    "message": "I dont have many questions. I mainly need to remember to sign into the right account before I start working. Will we be learning jquery as well?"
  },
  {
    "message": "I don't have any questions either. I am wondering if the math gets more complex later on in more advanced Javascript."
  },
  { "message": "I have no questions yet! Let’s hope it stays that way!!" },
  {
    "message": "Having had some background in other coding languages, I feel fairly comfortable with JavaScript to not have any questions at the moment. I feel like I just need more exposure and practice."
  },
  {
    "message": "A lot of the exercises use math, so far it's pretty simple...im a little worried about how complex it can get in the future...especially when using technical definitions... how complicated does the math get?  Also, I am still not sure what exactly javascript can DO...haha! It's hard to conceptualize the possibilities..."
  },
  {
    "message": "I haven't had any issues yet doing the homework. I have enjoyed learning more about it a lot though."
  },
  {
    "message": "How much understanding of math do you need to know to be proficient in Java Script?"
  },
  {
    "message": "I can follow most of the exercises pretty well, but I got a little hung up once I got to the nesting for loops."
  },
  {
    "message": "My brother told me about a guy who crashed MySpace because he did something funky with JavaScript and that's why he always protects it if he doesn't want it to be altered. How do you protect/hide your JavaScript so people can't mess/steal it?"
  },
  {
    "message": "No questions at the moment. Everything makes sense so far. I really like JavaScript!"
  },
  {
    "message": "I didn't have any questions either, I was able to find the answers to my own questions."
  },
  {
    "message": "Is jQuery used that often nowadays? I think I remember hearing that jQuery has sort of fallen out of fashion because it's not that much harder to use vanilla JavaScript. Maybe it depends on what you're working on? Maybe jQuery is more suitable for DOM manipulation?"
  },
  {
    "message": "My brain works better understanding if/else statements. Is it fine to use these often or does industry standard say to use other commands like  conditional operators when available."
  },
  {
    "message": "I’m happy to be learning Java Script. I don’t have any questions at the moment but if I come up with any I’ll be sure to ask."
  },
  {
    "message": "I have always wanted to learn Java Script, so I am excited to learn it. I will let you know on the questions."
  },
  { "message": "I don't have any questions, but I'm liking JavaScript!" },
  {
    "message": "I thought I was understanding objects pretty well, but then I got to the Record Collection one and found myself a little lost. I felt like I had it pretty close, but I couldn't get it to pass until I copied and pasted the hint answer in. I must have pressed Ctrl-z and Ctrl-shift-z 30 times trying to see the difference..."
  },
  {
    "message": "This was hard for me because I had to suddenly remember all these new commands and what they did. I wish there was a small popup on the site that held at least a list of the commands that it taught us as we learned them."
  },
  {
    "message": "Suppose someone was to commit their repository and then reverted it back to a previous commit. Would the commit that you reverted still show up in the commit history or would it go away completely?"
  },
  {
    "message": "I had a hard time editing those .txt files. I kept messing them up. It took me a minute to figure out how to delete lines and such. I didn’t really understand why I needed to do it? Why were the commits conflicting?"
  },
  {
    "message": "I had issues completing more than the first section. It eventually let me do more but I couldn't do much. I barely made it through lesson one. I had to reload the last couple questions a few times. How much can a repository hold before it doesn't work properly?"
  },
  {
    "message": "I keep getting messed up on leaving messages in the staging area.   How do we confirm messages and run what has been written?"
  },
  {
    "message": "I’m gonna be honest, it would make things easier if I could see the completed project alongside git, like how it is with html and css"
  },
  {
    "message": "I think I agree mostly with the majority of people on having trouble with the push and pull aspect."
  },
  {
    "message": "I am still learning about Git and exactly what it does. I still have some questions I need help with for the first project. I can let you tomorrow. However, a question about Git, so basically Git is about managing and collaborating software, is that correct?"
  },
  {
    "message": "I also have issues with push and pull. Also I was wondering if there was a way to view the completed web page on github or if it has to be connected to something else to do this part."
  },
  {
    "message": "I often hear that a great way to build up a portfolio / resume is to contribute to open source projects on GitHub. However, this whole process confuses me. How can I find a project to contribute to, and how do I contribute to it? Let's say for example I'm contributing to an open source framework or something. How do I know what to code, and how do I even know if it'll get added to the live version? The whole process is kind of blurry for me."
  },
  {
    "message": "I can do what the training tells me to do, but it's still hard to understand.  I was prompted to type: git diff summary-satistics..master\nand it askes me how many files were different, I just cant read what its saying back to me.\n\nwhat does this mean as an output?\n@@ -1,4 +1, 4 @@\ndoes it mean one file was deleted and one was added, so I started with 4 & ended with 4?"
  },
  {
    "message": "I am having troubles with Chapter 4, for some reason it won’t let me complete it. I am 88% of the way done with it but when I want to go to the next challenge it takes me to chapter 5. Is anyone else having this issue?"
  },
  {
    "message": "Restoring was a bit challenging initially for me.. I kept getting it confused somehow.  Mostly I found the  'Finding where a cloned repository originated'  pretty difficult. I think I'll run through it again when I get a chance, just to straighten it out in my mind."
  },
  {
    "message": "So I completed the course, trying out things in Git Bash as I did. Along the way, I saw blurb on the GitHub site for their GitHub Desktop app. I tried it out and it seemed a bit more user friendly. Is there no problem with using this in conjunction with Git Bash? One of those things where we do it the nitty gritty way first? It appeared to link smoothly with VSCode and connect to GitHub with more success."
  },
  {
    "message": "For some reason I had problems with remotes, they were just kinda confusing to me."
  },
  {
    "message": "How do you keep your files straight in your mind in command line? It’s hard to remember where everything is when trying to commit stuff."
  },
  {
    "message": "I had trouble with the \"restoring an old version of a file\" section, later realizing it was super easy and I made a tiny error that caused me to not really understand until I went back, re-read, and said \"oohhh, that's how you do it\"."
  },
  {
    "message": "Push and Pull was troublesome.  Also editing those .txt gave me trouble for some reason."
  },
  {
    "message": "I struggled most with pulling and pushing origin master. I had to redo and work through the section multiple times to get it."
  },
  {
    "message": "I didn't have any trouble with the lessons, but I've had a lot of \"what if\" questions that I'm sure will be answered as I use git more and more. For instance, if I clone someone's repository from Github, can I see all their commit history or can I only look at the history I create?"
  },
  {
    "message": "I had the same problem with git pull and git push. I was having a difficult time getting the \"collaboration\" section in the course to work."
  },
  {
    "message": "I had the same problem with 'git pull origin master' and ' git push origin master'.  I struggled the most with that section and spent a lot of time on it. I could type it in sometimes and have it work and other times it wouldn't. I also wondered if I was typing in something wrong or if it was DataCamp."
  },
  {
    "message": "I had a lot of issues with the 'git pull origin master' and ' git push origin master' part of this. I am not sure if it was a problem with DataCamp or something I was doing, but I went through it a few times and it only worked correctly about half the time."
  },
  {
    "message": "My original question (posted in the wrong spot) was \"Does this just need to meet all the basic requirements, or should we be doing images and some gussying up for the assignment? I know future assignments will be improvements of it, but...\" but I think I got that answered in class pretty well on Tuesday."
  },
  {
    "message": "I am currently having issues with my nav bar still cutting off my \"Contact\"part of it no matter how I adjust the width. Other than that, other parts that I have looked up or coded otherwise have went smoothly. Can you link href more than two files?"
  },
  {
    "message": "I haven't had anything that has held me up so far. Hopefully I wont. fingers crossed."
  },
  {
    "message": "I want to know the difference between using rem and pixels. I think it was explained before, but it hasn't stuck with me.  Other than that, I think I just need more practice with CSS more than anything else."
  },
  {
    "message": "I'm in another coding class right now and I'm right in the middle of doing CSS in it. The teacher is having me make a lot of elements classes and then linking the style to those specific classes. Is that normal to do that in industry, or is he just having us do it to learn how to style different things?"
  },
  {
    "message": "I don't really have any questions (I was able to look up and find answers to the questions I had), but one of the things I learned from this exercise is that there are a lot more relative measurements than I knew about (one being the vh) and I'm looking forward to experimenting."
  },
  {
    "message": "When creating a menu/navigation is it better to use flex box or standard css styling. I originally learned to do it with basic css styling and am wondering what the advantage is to use flexbox instead."
  },
  {
    "message": "How do other services like Heroku and Firebase compare to Netlify? Heroku and Firebase seem much more popular."
  },
  {
    "message": "I still have some questions about how to do some of the assignments so I can ask about it later tomorrow. I also have a question about when to use a certain style as well."
  },
  {
    "message": "Like a few others I have also wondered what the best way is to keep everything organized."
  },
  {
    "message": "I didn’t have a question, but I noticed I struggled with keeping everything 100% organized. I found myself scrolling through my code multiple time trying to find small things."
  },
  {
    "message": "When making a navigation bar, is it better to use flexbox or just align-items: end?"
  },
  {
    "message": "Whats the best way of keeping the stylesheet clean and organized?"
  },
  {
    "message": "I am having a hard time conceptualizing the organization of the stylesheet.  I think I understand when to use schematics in the html doc, but then I am not sure which styles to put where.  For instance, i have a section id and class, then a div id or class and an element with a class or the element style itself.  Sometimes it makes sense and it seems obvious to style a container with container attribute...but what about font color, weight...how things are sized?  Are their rules like, \" you should style something with it's parent whenever possible?\"\n\nI noticed sometimes you like to use id's over classes...\n\nAre both of these just designer preference or is another a reason to organize things a certain way?\n\nIs the coding world still concerned with the size of the document?  (being more efficient when the documents are read by the computer)"
  },
  {
    "message": "I have learned about formatting through CSS, using Flexbox, and using a 12 column (or other amount) grid in primarily HTML. How do I know when to use one over the other?"
  },
  {
    "message": "I don't have any questions yet -at least ones that I know of..\nbut I feel like it helped a lot to know that the element could help me organize my code better when keeping track of what I am creating.  (when creating the navigation menu and navigating to different links or sections on my page.)"
  },
  {
    "message": "How do you get images to shrink with the window sizing in a flexbox? I know this is supposed to be a function of and, but for some reason I haven't been able to easily apply it so all the images within a flexbox shrink nicely as the window gets smaller. I've tried a couple of other things from online, like object-fit: contain; and using classes to try changing the min-width to 0 and the width to 100%, but no joy yet."
  },
  { "message": "When is the best time to use flex-basis?" },
  {
    "message": "Is the only difference between flex-direction and flex-align is that flex align is more precise?"
  },
  { "message": "when should you use flex-basis?" },
  {
    "message": "Is declaring the display: flex; similar to importing a library in c++?"
  },
  {
    "message": "What is the difference between flex-direction and align-items? It seems to me like they are the same thing."
  },
  {
    "message": "If i use a display: flex on the parent can i just use the other elements (justify content, flex-direction, etc..) on the child? Or do you have to use display: flex on everything in order for them to work?"
  },
  {
    "message": "How often do you use flex, what is the most important thing we could learn from using it?"
  },
  {
    "message": "In many situations I like to just use CSS grid instead of flexbox. For example, if I'm making a simple navigation bar and I will often just use grid. Is this a bad habit that I should drop? Or does it not really matter?"
  },
  {
    "message": "What's a good way to know when to use the different flex elements?  There seems to be a lot of similar syntax for very different functions and it gets confusing really fast."
  },
  {
    "message": "It seems that flexbox \"replaces\" some stuff in \"regular\" HTML, but I can't seem to wrap my head around how... Any ideas that could help me?"
  },
  {
    "message": "I understand the difference between a \"fixed\" position and an \"absolute\" position. But when would you use one over the other? What are the pros and cons for each one?"
  },
  {
    "message": "seems like this is a common question- but when is it most common to use flex-basis?"
  },
  {
    "message": "Does the way we write our code (shorthand vs not) affect the security of the code itself?"
  },
  { "message": "When is it best situation to use flex-basis?" },
  {
    "message": "Are there times where it's better to use flex-basis over flex shorthand? Or can you always use shorthand instead for writing code?"
  },
  {
    "message": "Does every element need a flex, or just the parent of each element?"
  },
  {
    "message": "This may dock me points since it's not necessarily about CSS Flexbox, but how is everyone able to remember all these different CSS and HTML methods? I go through the FreeCodeCamp lessons okay, but as soon as I hop on to CodePen, it's like I've forgotten how everything works. I understand I'll just need to practice, but does anyone have any tips on retaining all this information?"
  },
  { "message": "When is it best to use flex-basis?" },
  {
    "message": "The units used for flex-basis is \"em.\" Could you use any other unit, like \"px\" or \"%\" and still get the same outcome??"
  },
  {
    "message": "Do we need to assign diplay:flex; to each element within the code or will in not apply to the parent element of or the first main?"
  },
  {
    "message": "We used a flex-grow in class, but we didn't use a flex-basis for it. When/why would it be important to have a flex-basis rather than rely on the default?"
  },
  {
    "message": "Is it better for code readability to use shorthand? Or is it only better because it is faster to write?"
  },
  {
    "message": "Should you always use a style sheet? Or is it okay to have it all in one?"
  },
  {
    "message": "If there are two color classes assigned to an element, which color does it choose?"
  },
  { "message": "How do you (and should you) do multiple classes or ids?" },
  {
    "message": "What is the process of using a non google font for your webpage?"
  },
  {
    "message": "I am confused why in freecodecamp we are writing the CSS directly into the HTML, whereas in class we have them separate. How does that work?"
  },
  {
    "message": "So I think I understand id and class selectors, but can I use the id more than one thing if I wanted to even if it isn't like best practice?"
  },
  {
    "message": "Why would you need so many overrides when you can just adjust the different values?"
  },
  {
    "message": "So I know CSS is how you style things but what other language is similar to it?"
  },
  {
    "message": "I also wondered why you needed to include a link for an imported font before the. How does it know it's pulling a font from that link to be used?"
  },
  {
    "message": "How can I animate SVG's with CSS only? For example: changing an SVG of a circle into a square through an animation. I've played with Anime.js before but I'm not really sure how to do it with CSS only."
  },
  {
    "message": "Can you use a fallback that will take over when someone accesses your site on mobile?"
  },
  {
    "message": "If you use the same style for the same element multiple times why does it choose the last one instead of the first one. Like if I set the color to red then set the color to black why does it decide that the final is going to be black instead of saying you said red first so thats what its goin to go with."
  },
  {
    "message": "It said that ID will has higher priority over class, would you recommend using Id more or less than class?"
  },
  {
    "message": "Where do you save your style sheet for your website? Any time I've done one it's been in a code editor so I don't know how I'm supposed to link the HTML doc to the Style Sheet doc."
  },
  {
    "message": "Is there a simple way to exclude certain elements from classes or changes within a div or section? Like if I wanted one paragraph to be flexed or colored, but another in the same div to stay default to what I have in the body or root?"
  },
  {
    "message": "Is :root only used in an HTML document? Also, I'm not sure I really understand why a variable would be listed under :root rather than just."
  },
  {
    "message": "is \"class\" the only element that requires a . before in the CSS style tag?"
  },
  {
    "message": "when are other times I would use :root? is it used a lot of the time?"
  },
  { "message": "What other instances should you use :root?" },
  {
    "message": "How important is knowing overrides? If you write your own code then why would you need to use overrides if you can set everything to what you want?"
  },
  {
    "message": "In the tutorial- it had us place into the html code, but what differentiates between adding those features in CSS as opposed to doing it in the html spot itself? for example codepen- it has a separate section for CSS things- but certain things I could only do in the html section-and couldn't quite changes using the same coding within the on the CSS side.. Like the img class, could only work in the style in the HTML side, but I could alter everything else in the CSS side like fonts, color, sizes etc... is there an obvious difference I may be missing?"
  },
  {
    "message": "Why do you need the link for the font at before the style sheet? How does it know that you are using that link to get the font you want?"
  },
  {
    "message": "When there are multiple styles for the same element in a css sheet, it is the last one in the doc that will be the style because of the cascade, correct?"
  },
  { "message": "When should you use id over class selectors?" },
  { "message": "Why are some tags self-closing and others not?" },
  {
    "message": "I took a beginning class for coding several years ago back in high school. It was HTML 4. I know code is changing every year. I know HTML 5 has some differences but what are some of the biggest ones and what are some advantages of 5 vs 4? What are the most useful tags added? I am just curious because I know coding and technology are constantly changing."
  },
  {
    "message": "I do not understand the function of.  Or why you'd want to use it.  Also, HTML code is new to me so it all feels foreign."
  },
  {
    "message": "I know that the tag can be used still, but it isn’t often used. What tags are now used in place of it instead?  Also, what is the difference between inline elements & block-level content?"
  },
  {
    "message": "I hate to repeat the same question as everyone else, but I too wonder when to use and when to use? What is best practice, or are there different times it is appropriate?"
  },
  {
    "message": "What are some examples of HTML and CSS frameworks / boilerplates, and are they useful? I've heard of Skeleton and Bootstrap before, but I'm curious to know if there are others, and how they're useful in certain situations and/or in general."
  },
  {
    "message": "When do we use, and? When is an appropriate time to use each of these verses the other and why? I have only used before previously while writing like this."
  },
  {
    "message": "Do you need to specify what doctype it is every time you code a new document?"
  },
  {
    "message": "If HTML already recognizes as a valid element, why do you have to add the id of footer to it. I get that the link is looking for something called footer when you use the reference #footer. But with being a built in part of HTML I think it should be able to find the"
  },
  {
    "message": "My question is also about and. So I've read a few of the responses and I just want to make sure I have this right:\nand have similar functions, but say I've already used a group nested in and I want to add another similar group. Then I would use to differentiate the two? Let me know if that's correct or if I'm way off. Thanks."
  },
  {
    "message": "Is there any tag like the tag that you can use that has the same purpose?"
  },
  {
    "message": "if filling the target attribute of an anchor tag sends you to a new page, what do you need to put into it in order to open to a new window?"
  },
  {
    "message": "I have the same question as other here: When do I use a div and when do I use a section?"
  },
  {
    "message": "I was having difficulty getting my line spacing to appear as neatly as the examples, e.g., my radials and check boxes sometimes wouldn't appear on the same line in a form, until I figured out (eventually) that's what the tag was doing. Does this tag apply to areas besides lists and paragraphs? Does it only apply elements that actually display, or can it be used to sort of fragment other functions?"
  },
  {
    "message": "It seems weird to me to use a hash symbol as part of a dead link. What would happen if I just left it blank instead until I knew what I wanted to link there?"
  },
  {
    "message": "what does the # mean when you use it as #footer? Is it like an id tag? I'm curious about the difference between and as well."
  },
  {
    "message": "What is the best way to find an image source for a website?\nI was working on a website for my team at work and we wanted to make a links map but had to have a reference address for the photo. I think big companies have their own dedicated servers for photos but what's a good option for a poor college student to use?"
  },
  {
    "message": "I also had the question of when is it smarter to use versus.  I have never used before, until now. My question was answered in class, but I totally was with you guys when you were wondering if it is better to use one or the other and if so, when to use them."
  },
  {
    "message": "(I know this was mentioned in class, I may just review the video of the lecture since I feel like class on Thursday answered this..) I guess my only question is/was why is the # symbol used? meaning what is it's function and does it only have one. It was also already answered why it is used in relation to implementing color.. those were my only real questions..but I also wondered specifically about the but I think my question was answered in class."
  },
  {
    "message": "I also wanted to know how and are different, how do you know when to use each?"
  },
  { "message": "Why do we use and?" },
  {
    "message": "How are,, and different? And how would I know when to use each?"
  },
  {
    "message": "How would you know whether to use or? Previously I have only learned about, but was defined as a way to group sections of content in HTML, so I am wondering what the best practice is to use."
  },
  {
    "message": "Are the basic data structures we are learning on free code camp mainly to help us be able to work with api's in web development? If not what might be some ways we could use it in the field?"
  },
  {
    "message": "Those are kind complex arrays methods. Most of times I've having difficult time understanding how it works this way. I guess I'm not only one out there that doesn't understand fully. Probably I'll get there at point where everything puts together like puzzle. Some of those Basic Data Structure I understand supposed to be simpler method."
  },
  {
    "message": "In a web design career, in what ways might we be using data structures?"
  },
  {
    "message": "Is there a way to iterate through all the properties in an object? Like .forEach, but for objects?"
  },
  {
    "message": "I also agree with Jordan, when would I need to use something like a multi-dimensional array?"
  },
  {
    "message": "What are some of the most common times you would use a multi-dimensional array in a website? I understand learning it but am curious when the most common times are that they get implemented into websites."
  },
  {
    "message": "When would we use javascript arrays in an actual website? I understand the purpose and how the programming works, I'm not sure how to apply it necessarily in a work setting."
  },
  {
    "message": "In a web developer based career, in what instances would we be using data structures?"
  },
  {
    "message": "I see that you can splice, which is interesting. Is there a way to do it like that with the API? Like select two different things?"
  },
  {
    "message": "There appears to be a lot of different functions that you can use in arrays.  Is there a list of them somewhere?  Something like the cheat-sheet for git."
  },
  {
    "message": "I am getting the hang of java script and how it works and functions but I still can't connect on how it is used in the real world and how to implicate it into a project.\nFor instance I'm working on my own project that is going to be a shop / clothing line, how could I use java script for it? the only thing i could think of how to implement JS is to have each product have its own java script object with the information like price's, etc.? And the only time I have really seen java script in a website is for a slide show or some little animation maybe google maps for locations for a business.\nI don't know, I am enjoying learning more and more just hard to see how its used and what we can do with it."
  },
  {
    "message": "Could you give us a real-world example of using Boolean statements with data arrays. I know how the example is useful, I'm just curious how it's used in the real world."
  },
  {
    "message": "I feel like actual coding rules are one thing, but learning how to apply them in my own code and when to correctly use which rule has become really difficult for me to learn. What would you use a complex mutli-dimensional array for, for instance..?"
  },
  {
    "message": "If Java Script is an open standard language what is so different about ES6 that it could just be backwards compatible with existing javascript?"
  },
  {
    "message": "How often will ES(x) update? Will the ES5 still be functionable?"
  },
  {
    "message": "Is ES6 basically just an easier way that helps cut back the number of lines of code in Javascript?"
  },
  {
    "message": "Why is ES6 separate from JavaScript, and not just a newer version?"
  },
  {
    "message": "ES6 is supposed to make write less code and more clear functions ?"
  },
  { "message": "How do you create a javascript class in ES6?" },
  { "message": "What is the purpose of ES6?" },
  { "message": "What is the difference between EMCAScript and JavaScript?" },
  {
    "message": "What does \"(!true)\" do in the ending result? it is just a false statement?"
  },
  { "message": "How long after JavaScript did ES6 come along?" },
  {
    "message": "I fell like ES6 is a version of Javascript kind of.. Why was it necessary to make ES6 and separate it from Javascript?"
  },
  {
    "message": "Why does there need to be a separate learning from E5 and E6? Isn't there a way to combine the two into one simplistic learning?"
  },
  {
    "message": "When did ES6 come out and how did it make it easier from ES5."
  },
  {
    "message": "What are\nmap(), filter() and reduce()\n\nused for?  These are referenced in the exercises for freecodecamp, but they don't explain what they are."
  },
  {
    "message": "Is there other applications to JavaScript besides animation and analyzing different information?"
  },
  {
    "message": "Some of the shortcuts in how to refer to things in JavaScript are really nice compared to other more basic languages where you have to be far more specific. Do these shorthand coder optimizations slow down the execution of the code when running in real time or just the compiling time when the browser or computer first reads and then interprets the code?"
  },
  {
    "message": "Why is it that Javascript is the preferred language for websites? Is it possible to use other languages like python?"
  },
  {
    "message": "On last two lesson for Ternary, why is there different options using this or with one with If function? I find that Ternary looks simple code. Anything than that reason to have more options?"
  },
  { "message": "How does java script interact with other languages?" },
  {
    "message": "With new languages that are already out like react and angular is javascript becoming outdated or less used now? or do those newer languages use a lot of javascript type of code?"
  },
  { "message": "What is the difference between a method and a function?" },
  {
    "message": "I entered “var remainder = 11 % 3;”, which the system accepted as correct. However, looking here I see var remainder = 2 % 11; is supposed to be the correct answer. Can anyone please clarify whether 11 % 3 really is the correct syntax, and if not, why not?"
  },
  {
    "message": "Javascript will definitely take practice for me just like git. I was able to understand a lot of it, however, for some reason, objects were really difficult to me. They seem very similar to arrays but I definitely have a more difficult time wrapping my head around them. I also noticed that if I even used : vs ; it totally would through my code off, and I would have to go through and find the line that ended incorrectly. What is really the difference between nested objects and nested arrays? What is the purpose of each?"
  },
  {
    "message": "What are some big websites or apps that are programmed with JavaScript?"
  },
  {
    "message": "Why is JavaScript used for web development over other object-oriented languages?"
  },
  {
    "message": "Do spaces matter in JavaScript?  I have notices sometimes my code will not pass a test in Free Code Camp if there is a space and other times it doesn't seem to matter.  Is this part of the test for Free Code Camp or is that how JavaScript works?"
  },
  {
    "message": "Just like Github, I feel like I need to learn more about Javascript to wrap my head around it. It's different from html and css and the way that it works. I suppose I will practice the tutorials again, but there's another source to learn Javascript, I would be interested."
  },
  {
    "message": "How does java script fit in the rest of the coding mechanics. What's its purpose."
  },
  {
    "message": "So you gave a example in class on how to manipulate documents but why would we need to change the code with more code why not just change the html code? But I do see why and how we could connect the html and css to javascript ways like arrays and functions. But how would we use the arrays and functions or loops in a website?"
  },
  {
    "message": "I started to make some commits to the repository but for some reason, it says \"error: failed to push some refs to '(shows a link to repo)', and so I tried logging into my computer's email through git bash but it still doesn't work. any help?"
  },
  {
    "message": "That was challenging on a few parts but was really informative and helped me understand how a team would work together on a project without it clashing as often if we didn't use git. I see now how useful and needed git will be in a development job."
  },
  {
    "message": "This was overwhelming for me, especially since so many of the \"answers\" did not help me pass the section.  I think having to select an answer that was not relevant to what I was seeing on my screen, confused me more.  What happens if I can't get git to work on my computer?"
  },
  {
    "message": "Is git considered the best version control system? Are there other ones that are more current?"
  },
  {
    "message": "Is Git only useful for when you're working in a team? Would you use it on your own?"
  },
  {
    "message": "why i feel that some commands  are very similar and the structure with a linux machine prompt"
  },
  {
    "message": "I feel like I need/want to learn more about using git commands so that i can be good at it. Is there other practice sites or ways to immerse myself in the practice?"
  },
  {
    "message": "I am having trouble with the Cntrl O and Cntrl X commands. Cntrl O works but nothing happens when I type Cntrl X"
  },
  {
    "message": "Are there other programs like Git that teams use to work on projects together?"
  },
  {
    "message": "I was able to finish Git. Any of you experience some bug issues? I felt I didn't understand clearly. Maybe I'll need to do some more practices. My question is how often do we use Git in web develop team?"
  },
  { "message": "what does git stand for and it's purpose?" },
  {
    "message": "Git has been incredibly difficult for me as I feel like the rules for git are still unclear to me. Can we do a git practice or a demonstration of more application for git?"
  },
  {
    "message": "I have never used or heard Git before. What is Git exactly and why is it important?"
  },
  {
    "message": "I was a bit confused by some of the commands.  This is unlike anything I have ever done.  Is there a list of the commands somewhere that I can reference back to?"
  },
  {
    "message": "Is there any differences for use GitHub vs Command prompt for git?"
  },
  {
    "message": "It took me a while to get my navbar to stay at the top and pass the tests for it. I had it outside the 0-15 criteria I realized after inspecting the page and finding default margin pushing me out of it."
  },
  {
    "message": "I ran into issues using the media queries, for some reason I couldn't get it to work. Do you only have to call them in your CSS?"
  },
  {
    "message": "Having the Welcome section be the size of the viewport threw me for the longest time because I was also using \"padding: 25%;\" to style that same section and put things in the middle. Apparently this breaks it out of codepens viewport hight and into your browsers. Would anyone know why that is?"
  },
  {
    "message": "is it better to use vw and vh or to do regular percentages to scale your website?"
  },
  { "message": "What is the best way to go about building a navigation bar?" },
  {
    "message": "Using unordered lists seems to be a popular way of creating navbars. Why is that? Is that considered best practice? I know there are other ways to do it, so is using an unordered list the best way?"
  },
  {
    "message": "This assignment for the portfolio is pretty interesting because it specifically tells you what needs to be in the code to pass. There may be some issues though because I can't seem to figure out what it wants in order to complete this test. This isn't really my favorite test thingy compared to the others."
  },
  {
    "message": "I am struggling with the programming environment.  What do you recommend for learning these new tools?  Can you also explain how the testing works in codepen?"
  },
  {
    "message": "How can you get elements to stretch across the whole screen? I think we learned in class but I forgot"
  },
  {
    "message": "Codepen definitely gave me some problems but I made it through. Hopefully everything was entered correctly. I realized after I'd run the test a few times I was running the wrong test and that was why it wasn't passing. So had to redo and run the test I was originally needing to. Hopefully it was all done right.."
  },
  {
    "message": "I'm having the same problems Maurina was having, only with both the nav and the welcome section. They're both displaying correctly to the top of the viewport but the tests still won't pass. I even inspected the code for the example and tried the same format and it still won't work."
  },
  {
    "message": "I had one part where I was stuck at 11/12 test. Where the part in viewpoint equal to the page as it stretches. Then Teacher Anderson found one where padding: 45vh; was inside welcome-sector selector I think. Teacher corrected it with padding-top: 45vh;"
  },
  {
    "message": "I am having a problem with the test for the navigation at the top of the screen.  I have the nav ul {position: fixed;  top: -16px;}   Is this right?  The navigation is staying at the top of the screen, but for some reason it won't pass the test.  I can't seem to figure it out."
  },
  {
    "message": "it tests for the navbar to be at the top of the page but some website might have it in other places dose it always have to or just for this test? also its hard to use codepen if your doing a multi page website."
  },
  {
    "message": "Is there a way I can add images that I’ve created on photoshop/illustrator, and transfer them to my repository? I know you can do it on github manually but I was just curios if there was a way to do it on git bash."
  },
  {
    "message": "When using flexbox it seems that the flex items contained within are positioned relative to the containing flexbox. Would I be correct in assuming that?"
  },
  { "message": "What is the difference between flexbox and floats?" },
  { "message": "what is the difference in using flex-box and css-grids." },
  {
    "message": "I find that flex-box is useful. I remember using CSS several years ago and flex-box wasn't there. It seem to help structure the web page better Will those old version before flex-box still functional even with all browsers?"
  },
  {
    "message": "What's the best code editor to use? I've used Brackets and Sublime Text.. Wondering if their is a better option?"
  },
  {
    "message": "In what circumstances would you need to use the \"order\" property?"
  },
  {
    "message": "This mainly has to do with CSS in general, but I was curious, in the real world do web developers write inline CSS like we've been doing in freecodecamp within the style tags, or on a separate page like in class?"
  },
  {
    "message": "Would Flex box be considered the easiest way to structure your overall layout?"
  },
  {
    "message": "Here comes my basic question: Does it matter what order in which elements are listed in CSS?"
  },
  {
    "message": "Is using flexbox more acceptable by programmers instead of using floats to align divs?"
  },
  {
    "message": "I wonder if we can use table instead of flexbox. Are they different to use?"
  },
  {
    "message": "So flex box is a very cool thing to use when laying out items. can it be just for one item or does it have to be for multiple items in a layout?"
  },
  {
    "message": "Is the flex direction property applicable to only the element in which it's coded under or will all the child elements have the same flex property applied?"
  },
  {
    "message": "Dose css grid kinda replace flex box or are they two separate things used in different ways?"
  },
  {
    "message": "Is there any instance where align-items will over rule align-self?"
  },
  {
    "message": "Is there a case where flex-box won't work within another programming language?"
  },
  {
    "message": "Why would the CSS read the last one as the most important? why not the first?"
  },
  { "message": "The margins were a little hard. Like the the mm or px." },
  {
    "message": "Is having your css included in your html or in a separate file preferred in today's standards?"
  },
  {
    "message": "Is their an easier language like CSS to better design the layout of a webpage or an app?"
  },
  {
    "message": "how you get organized when you have a lot of codes or what is the best technique to keep track all the code you are doing"
  },
  {
    "message": "For RGB Would you talk about the 2 digits for one color that equal 16 x 16? Here's the quote:\nIf you do the math, the two digits for one color equal 16 times 16, which gives us 256 total values. So RGB, which starts counting from zero, has the exact same number of possible values as hex code.\nAt first it seems the two digits for one color refer to the two digits in the hex code: # _ _ for red, _ _ for green, _ _ for blue, but I can't see how those would equal 256. How would you explain this?"
  },
  { "message": "What is the best practice for ordering attributes? ex. vs." },
  {
    "message": "In the basic CSS section: 'Use Hex Codes to Mix Colors' the code still worked whether or not there was a # in front of the hexadecimal. Is there a reason for using # if the hexadecimal works without it?"
  },
  { "message": "Can you clarify what is :root and how does that work." },
  {
    "message": "I thought that variables were only available in CSS if you had a preprocessor. Can you use variables in pure CSS?"
  },
  { "message": "Can you talk about how keyframes work?" },
  {
    "message": "when you put the value as \"auto\", like for example \"margin: auto;\" what is the value of auto?"
  },
  {
    "message": "whats the best practice for using the !important with css styling. should it be reserved only for when its really needed or is it mainly preference of developers when they use it."
  },
  {
    "message": "Are there certain circumstances when you should use rgb coloring or hex coloring or is it simply the developers preference?"
  },
  {
    "message": "How does CSS help with the responsive design side of a website?"
  },
  { "message": "Does it matter if you put the id before or after an action?" },
  {
    "message": "What is a CSS selector?  I thought it was like this for example\n\nh2 {\n\nfont-family: Lobster , Open Sans ;\n\n}\n\nWhere the h2 is the selector, is that right?"
  },
  {
    "message": "How could I make all codes are very well organized to work with others?"
  },
  {
    "message": "What did they use to layout and style there websites when css was not around? Was it just plan html?"
  },
  {
    "message": "Why is it necessary to use an anchor tag when you use an href?"
  },
  { "message": "What does not mean?" },
  { "message": "why do we use !important in css ?" },
  { "message": "what is the main use of a \":root\"?" },
  { "message": "What other attributes can you use with the tag?" },
  {
    "message": "How does building a website have to do with building video games?"
  },
  { "message": "hey where do I put the alt attribute?" },
  { "message": "Do most developers use comments in their code often?" },
  {
    "message": "What is the difference between and tag? Is one better than another in a certain case?"
  },
  {
    "message": "Before CSS how was websites put together? Weren't they built with tables?"
  },
  {
    "message": "What is the role of HTML? Why learn HTML first, followed by CSS and Javascript?"
  },
  {
    "message": "What's different between elements and attributes? Attributes always goes inside one of element that is open ones?"
  },
  { "message": "What would be the purpose of making dead links?" },
  { "message": "What is a href=\"#\", does that just show a blank space?" },
  {
    "message": "What is the purpose of placeholder text? Just to get a sense of the layout of the webpage before you input the real text?"
  },
  { "message": "Could you explain the different uses of the ?" },
  {
    "message": "Does it make a difference if you put the around the checkbox/radio button input field or if you put the label before or after the input field?"
  },
  { "message": "What are differences between HTML and HTML5?" },
  { "message": "What was html like before it became html 5?" },
  {
    "message": "https://prod.liveshare.vsengsaas.visualstudio.com/join?280CA0886EC21E8B62272483A40CC783BC96"
  },
  {
    "message": "A challenge I faced when I was doing the online free code camp was it saving my progress. I found that annoying sometimes, but luckily the steps were easy going through. Any ideas how to fix that?"
  },
  {
    "message": "Is CSS meant to affect only the appearance of the website? Or is that just one of its functions?"
  },
  {
    "message": "What are the limits of HTML5 and what tools can we use to overcome them?"
  },
  {
    "message": "I took a year off of school so it's been a while since I've used html. When should you use and when should you use? Is one considered better/standard practice over the other?"
  },
  {
    "message": "I am really new to all of this and I am learning a lot. I guess one coding challenge/question I have is when I am messing around and try to add pictures to my websites some links work fantastic and other links to pictures don't work at all. I am trying to figure out why that is? I understand some aren't the right format, but I still find it confusing. Anyways thank you all for the awesome comments and replies I have found it very helpful for a beginner like me!!"
  },
  {
    "message": "Is it a standard rule to outline a website’s structure before you start to code or can you wing it?"
  },
  {
    "message": "What are several appropriate uses of div VS span? I'm still confused... Does flexbox make spans obsolete?"
  },
  {
    "message": "How are blogs coded to allow somebody to post information or an article? I just learned simple form coding from the website and I am wondering if it is just a more advanced form or something else."
  },
  {
    "message": "Are there other uses for the anchor, and if not, could it be simplified by dropping the href and making the tag work as <a=\"google.com\">\nBasically, what is the point of tacking on the href?"
  },
  {
    "message": "I noticed it's hard to read the code that code camp would generate when starting a new section because the indentation and whitespace is different from how I like to do it. What is the industry standard for indentation, whitespace, returns, etc.?"
  },
  { "message": "Why are some tags self closing and others are not?" },
  {
    "message": "I am really enjoying this class so far!   My question on the HTML stuff happens to be about the CSS side of things.  Is there an order of things we should follow for organization purposes, or does that even matter?   Also, when listing all the specifications that you want to have under each classified unit or ID's, or something...  should there be an order of things there too?   for example when we talked about specific colors, borders, margins, spacing, font, etc.?"
  },
  {
    "message": "Is CSS considered its own coding language or is it looped in with HTML? It seems to have different syntax and elements than HTML but they both go hand in hand. Are there any patterns within the syntax of each that could help a beginner learn them both?"
  },
  {
    "message": "During the nested tags that we have to practice with there where three attributes that we needed to add. Do the attributes within a tag have to follow a specific order?"
  },
  {
    "message": "With the more recent trend of using semantic markups in HTML5, not much is mentioned in this section. Is freecodecamp just simply not up to date with the new direction?"
  },
  {
    "message": "This has been a good class so far. I have a question more outside of the lesson this time, but it is about article tags. What place do they have in coding a website?"
  },
  {
    "message": "I have been wondering why they teach floats anymore when there are things like CSS Grid, or Flexbox. I guess I just don't understand if there are specific scenarios when you would want to use a float over the other, much better and easier options."
  },
  {
    "message": "Is CSS only for just the look of the project or does it have other functions?"
  },
  {
    "message": "I'm liking this class so far. the thing that caught my attention was the 'comment coding'(). I was wondering, if the '!' creates the comments, what kind of coding would it be if the we used the '?' or the '.' symbols. (ex. )"
  },
  {
    "message": "When you are working in HTML is it hard to change it to HTML5 or is it simple because they are so close to each other?"
  },
  {
    "message": "I don't understand what the purpose of a division element is. Is it just to help organize the code into sections or does it serve another purpose? Why is it the most commonly used HTML element?"
  },
  {
    "message": "I didn't really understand the point of the head and body tags, as well as declaring the doctype.   Freecodecamp said it was for organization, but how exactly does it organize?  Is it just for those reading the code or does it actually do something to the web page?"
  },
  {
    "message": "How can you hyperlink an image? Is it the same as linking text?"
  },
  {
    "message": "Is it hard to transfer from one coding language to the another?"
  },
  {
    "message": "How long has CSS been around and how often does it change? I feel like a challenge would be remembering all of the different options."
  },
  {
    "message": "When making the figcaption transparent I used opacity but when I applied it it not only made the background transparent but the words as well. I should there a way just to apply that to the background?"
  },
  {
    "message": "Why would a variable be used if you can just add specific code for each class or parent? Using variables seems redundant."
  },
  {
    "message": "What is best practice, having a separate CSS file or just having the style tag in your html?"
  },
  {
    "message": "How do I overlay the text with the transparent background over a logo? I've tried nesting divs and adding different padding and using position: absolute; for the smaller nested container but nothing seems to work?"
  },
  {
    "message": "Sometimes I struggle with using class tags vs id tags. Should I avoid Id tags in general? Why have them at all if you can only use them once?"
  },
  {
    "message": "I haven't quite grasped why there is a need for the several different ways to code things, particularly color. It is just for backup, or are there other reasons?"
  },
  { "message": "What's the difference between margin and padding?" },
  {
    "message": "Is CSS only used with html? Or can it be used with other coding languages as well?"
  },
  {
    "message": "What is the difference between using a hex code vs rgb in CSS? Is one better than the other or is there a reason why we should use one over the other?"
  },
  { "message": "Are there methods you can use to organize your CSS?" },
  {
    "message": "Is there a clear way to keep Classes and ID separate so that we are les confused in which to use?"
  },
  {
    "message": "Freecodecamp tells me that I will probably encounter a lot of  browser compatibility errors. I was wonder what those errors might be and how to avoid them so my code will be compatible in most if not all browsers?"
  },
  {
    "message": "It seems like HTML and CSS are meant to work hand in hand.  Are there any other languages designed like that?"
  },
  {
    "message": "How do I know when to use classes and when to use IDs in CSS?"
  },
  {
    "message": "I'm mostly wondering who else kind of thinks of the hex vs rgb question as hex being used when you know what color you want to use, while rgb is more like sitting there with your Bob Ross palette to combine colors until you get what you want?"
  },
  {
    "message": "How common is it for Variables to be used? This was the first time I've come across them."
  },
  {
    "message": "Is it better to use the short hand of the color values or to just write the whole letter/number sequence?"
  },
  {
    "message": "Is there a benefit to using the RGB number value instead of a Hex number value for colors?"
  },
  {
    "message": "You can center and move text and objects with HTML and with CSS, so why is it better to move and do the coloring with CSS?"
  },
  {
    "message": "For inline styling is there a best practice order for adding multiple styling elements in the HTML?"
  },
  {
    "message": "What is the purpose of using both margins and padding? Would it matter if you only used one?"
  },
  {
    "message": "I was just curious if using an rgb, hex, or color value is best practice when writing CSS. I've used all three in multiple situations but I don't know which one really should be used over the others."
  },
  {
    "message": "This is the same questin i had last week, but is there an order of things we should follow for organization purposes, or does that even matter?   Also, when listing all the specifications and styles that you want to have under each classified unit or ID's, or something...  should there be an order of things there too?   for example when we talked about specific colors, borders, margins, spacing, font, etc.?  would it really make a difference if there was an organization rule?"
  },
  {
    "message": "The CSS variables are new for me, do they work with CSS Pre-Processors?"
  },
  {
    "message": "I use mostly google chrome. But there are a lot of people who have out dated computers and browsers, will this affect the flexbox styling on your websites?"
  },
  {
    "message": "I find it interesting all the different ways to do things; the way that flexbox works vs. other options. Which are the best to use? I figure it just depends on the situation or preference?"
  },
  { "message": "About how often does the flex change or evolve?" },
  { "message": "what is the difference between flexbox and CSS grid?" },
  {
    "message": "Does float become irrelevant with the options flexbox offers?"
  },
  { "message": "What kinds of websites use flexbox?" },
  {
    "message": "It seems like you can do a lot with flexbox in css. I have enjoyed learning how to use it. Do most professional websites use flexbox? Is it ever a good idea not to use flexbox?"
  },
  {
    "message": "Flex-box seems to be this awesome new way to edit containers in CSS.  I have yet to hear anyone say that it has any draw backs.  Are there any cons to using flexbox?"
  },
  {
    "message": "Can CSS flexbox be used in any type of container? Is it for any kind of parent? Or should it be used in a few specific instances?"
  },
  {
    "message": "Here is another question I just thought of!...  can you put a flex box into another flex box?  And how does that work?  (Could it be as simple as putting a smaller box into a big box and then another box inside the smaller box?).    Will we be covering that later on or at all in this class?"
  },
  {
    "message": "What happens when parents are children are both using flex boxes?"
  },
  { "message": "When should you use CSS Flexbox vs CSS Grid?" },
  {
    "message": "I've noticed a lot of \"default settings\" in css,  are they mainly for overriding a decision in your code later if you have too much trouble finding your issue?"
  },
  {
    "message": "How often are floats used? Are they sort of obsolete now? This is my first introduction to Flexbox and it seems way more straightforward and easier to implement compared to floats."
  },
  { "message": "How does CSS Flexbox relate to CSS?" },
  {
    "message": "As I was going through the code camp assignment,  something has caught my attention.   could anyone fill me in on the the code css property of \"order\" that is part of the flex box?    Also, on a side note I am starting to see that  flex box in a way is like the preposition of a sentence.  This to me makes it easy to remember!"
  },
  {
    "message": "The order element caught me off guard. It can reorder the items you have outside of the default order in HTML. Wouldn't just make more sense to make sure that everything is ordered correctly in HTML? When you you use the order element?"
  },
  {
    "message": "Two questions, when do we know to use flexbox and when not too? Also with justify-content with space-around and space-evenly I don't see much of a difference using so what is the difference in those?"
  },
  {
    "message": "Although CSS Grid and Flexbox are quite different, is there a way to make Flexbox behave similarly to CSS Grid when it come to responsiveness?"
  },
  {
    "message": "Can you use flex items on parents/flex containers on children? Or does it just depend on how the code is structured?"
  },
  {
    "message": "When is it best to use justify-content over align-content and vice versa?"
  },
  {
    "message": "How often does Flex update? Like will the flexbox be irrelevant in a couple years with more websites that are being used to build websites? In general with those will building websites from scratch be outdated?"
  },
  {
    "message": "It's apparent that a lot of techniques are personal preference, But are there any unwritten rules as to the decision to use flex or not? in the case of navigation it seems that flex is a great choice as a best practice."
  },
  {
    "message": "For me the biggest challenge was page organization, is there a best or right boiler plate code for making page organization easy?"
  },
  {
    "message": "For anyone doing something with the planets: are you finding creating buttons that work extremely difficult? I'm trying to make buttons that filter climates, but I ran into the problem that the climates I am sorting through have some that are both of the climates I am trying to filter, and this is seemingly breaking my code."
  },
  {
    "message": "Do animated properties on portfolio pages help demonstrate skill? Or is that something that makes the portfolio look unprofessional?"
  },
  {
    "message": "I had trouble figuring out the media query. I don't understand how to make the flexboxes go into a single column instead of squishing onto one line when I change the size of the window. I tried to read more about it, but I found it hard to follow what they were saying."
  },
  {
    "message": "Is this the portfolio we turn in to get into upper level web development classes?  We are also creating a portfolio page in my DGM 1220 class and my DGM 1110 class.  Should I just choose one to focus on for the remainder of the year?"
  },
  {
    "message": "As far as media queries go, do you have to do the math to figure out the size of the display to make the responsive changes (pixels to rem, or something like that), or is there a faster/better way?"
  },
  {
    "message": "I have noticed that in job searching, some require the use of a portfolio.  How can portfolio's help me gain a postion in a job?   what kind of experience or skills do they look for in a portfolio?"
  },
  {
    "message": "If we don't really have other projects to link to, what would you like for us to use as content in the projects section? Just some images with links to our git hub?"
  },
  {
    "message": "I'm struggling trying to mimic the transition on the projects captions. Making something fade in or out"
  },
  {
    "message": "I have questions about setting up the .gitignore. I'm confused when it comes to trying to saving and exiting out of the editor inside terminal and typing * to add something to it. The * doesn't want to type."
  },
  { "message": "Does our project content have to link somewhere specific?" },
  {
    "message": "When I try to minimize my page, the photos don't minimize with it. What would be the best way to fix this?"
  },
  {
    "message": "How important are portfolio pages and how much can people sell them in the real world?"
  },
  {
    "message": "Building this project has been interesting and tricky, I know you can change the size of an image in html and also css,  is one preferable to the other in the coding world or does it not really matter whether you write the code in html v css? Also still trying to figure out nav bar haha."
  },
  {
    "message": "Are we allowed to put projects from other classes in the grid or do you want only the projects we do for this class?"
  },
  {
    "message": "My code won't allow me to add pictures.... I've followed all the steps that was in class and tried again with the video... any idea why it won't load or accept my pictures saved on my computer?"
  },
  {
    "message": "Do we need to make this a presentable site or do we just need to pass the requirements for the test?"
  },
  {
    "message": "I'm not sure I completely understand Media Queries. They seem like if/then statements make a page responsive but what is the correct syntax and when should they be used?"
  },
  {
    "message": "I started playing around with FireBase, is it ok if we host our site on a service other than netlify?"
  },
  {
    "message": "I noticed that the Personal Portfolio design is using CSS Grid. Are we going to be utilizing that during this project? My challenge was in regards to aligning CSS Grid. I tried 'justify-items: center;' but it would not change the alignment of the children inside the container. I ended up using 'margin: auto' instead, but was wondering if I was coding it incorrectly."
  },
  {
    "message": "In another class I had to buy hosting and a web domain, is there a way to use git that automatically updates your website every time you push new files?"
  },
  {
    "message": "My dad is a computer programmer and uses git frequently.  Do web developers use it more or less frequently than software programmers?"
  },
  {
    "message": "I started to understand more how Git works as the course progressed, but I still am unsure about how often and for what exactly it needs to be used?"
  },
  {
    "message": "This exersise was really difficult for me because I wasn't sure if they were referring to local files or commands. I wish they had videos."
  },
  {
    "message": "I was noticing that leaving a space in some parts of the code was important whereas other commands it was less so. I was having a hard time with the comments as well. like what is the difference between `-m and -m? I was really confused by that."
  },
  {
    "message": "What is the difference between \"git pull\" and \"git fetch\"?"
  },
  {
    "message": "When working with multiple people on a project, will one person have access to the master branch, or will multiple people have access? Is the master branch kept on one specific GitHub account or is it a remote branch?"
  },
  {
    "message": "I notice when I commit changes on VS code, it requires me to put in a message with it. Anyway for me to skip that?  I've just been writing when the message part comes up."
  },
  { "message": "How can you know how it was changed? With git diff?" },
  {
    "message": "I was a little confused with git diff.  Mainly with trying to understand the lines that were changed and how many were added or removed.  Also, how common are conflicts? I feel like they would be a real pain to try and figure out, especially if you are new to this."
  },
  {
    "message": "I think one of the biggest coding challenges I've had this unit is just remembering all the commands for git. I guess one question I have is their any good tips to remembering everything ? I'm guessing it just takes time and practice to remember everything ."
  },
  { "message": "How long can git hashes get?" },
  {
    "message": "Is it frowned upon to use GUI git environments over the command line?"
  },
  {
    "message": "to my understanding, does git bash act like an online server for our files to be kept there?  if so, i think that is the coolest thing i have ever seen, and the coding part will need more proctice to get use to."
  },
  {
    "message": "I finished the course but I'm still struggling to understand the concept of how branches merge together. I get that conflicts need to be resolved but shouldn't there be an automatic process for this? Wouldn't it be easier to choose which of the files takes precedence during a merge and the merge just overwrites conflicts with the precendent's code? Instead of having to change files individually?"
  },
  {
    "message": "I'm still trying to understand Git Push and Pull. When would you need to use these?"
  },
  {
    "message": "With adding files to your git repository can you command connect it from the terminal or is it best to do it from visual studio code or programs like it?"
  },
  {
    "message": "When doing the git diff command, how can tell if it's different because it looked like it was the same as before doing that command."
  },
  {
    "message": "Which terminal is best for staging/committing/etc? Does it matter if I use VS code, GitKracken, or the computer's terminal or is there a recommended option?"
  },
  {
    "message": "I was sort of confused when typing in the git diff command, such as git diff HEAD~2. I don't quite understand how to read the changes between the commits and what was changed. I know it says that there are -'s and +'s to show that information, but its still difficult to understand."
  },
  {
    "message": "I've experience with other programming languages but this is my first time learning javascript. How is javascript different from languages like python, c++, and c#?"
  },
  {
    "message": "After going through all of the basic java script curriculum my question was how often this is used in typical website building. Is it really common? It was hard to figure out what specifically it would be used for."
  },
  {
    "message": "Is there a way to check outputs on codecamp? When I have a failed test it just shows me the error list and not the actual output."
  },
  { "message": "Will we be using any Jquery in class?" },
  {
    "message": "I think understand the basics of Javascript, I guess one question I have is what are the most common everyday uses of Javascript in basic websites?"
  },
  {
    "message": "Javascript seems really similar to python.  When we are out in the work field will we need to know multiple languages?  How do we keep from getting them confused?"
  },
  {
    "message": "I'm struggling with really understanding what I'm doing. I can pass the tests but I don't know why I'm doing what I'm doing. I'm hoping that comes with practicing on real projects. Especially with manipulating arrays. Is anyone else having this experience?"
  },
  {
    "message": "This is my first introduction to JavaScript. Is there a specific place in a document where you include JavaScript? Or is it linked to the HTML  as an external file? Can you do both?"
  },
  {
    "message": "I have tried a few different ways to write out the escape sequences in strings, but I still struggle to understand exactly how they work. Are there supposed to be spaces between the words? And is it easier to use single or double quotes on the outside of the string?"
  },
  {
    "message": "What will we use more often in our work... HTML5 or Java Script? And what makes that one more significant than the other?"
  },
  {
    "message": "Is JavaScript a good language to jump in to when you know nothing prior to that?"
  },
  {
    "message": "I am struggling with the section of the challenge on using comparisons. What is the point of them? When will we need to prove a boolean true or false?"
  },
  {
    "message": "So, has anyone else ran into the problem of the wordBlank section being broken? I just added spaces in between the different function pieces and it let me pass, but whenever I put in words, it wouldn't."
  },
  {
    "message": "When I spoke to an academic counselor about the web design and dev major she told me that CSS and HTML were pretty much the only skills I would need to succeed in this field. I am beginning to realize that that's probably not the case. How important is JavaScript in this field compared to HTML and CSS?"
  },
  {
    "message": "I am very confused on Assigning a Returned Value. I can't seem to pass this section. I am trying everything I can think of, but I can't get the second part of the challenge passed. It want's me to assign processArg to processed and I cannot figure out what wording I need or where I'm going wrong.\nI am also having a hard time understanding what I'm doing. I can follow the modules and pass each one, but until it is put into concept it seems so abstract that I don't even understand what anything means at this point. I feel like I'm just following the tutorial without really understanding the function of each part of code. I'm hoping it will click when I start applying these concepts in future work, but I'm trusting the process and hoping everything falls into place as we start implementing code into our projects."
  },
  { "message": "What's the difference between Java and JavaScript?" },
  {
    "message": "I am really confused with variable assignments. What does exactly mean when you have two same variables but in one the variable is on the right of = and in the other line that same variable is on the left of = ?"
  },
  {
    "message": "I have heard from others that it can be difficult to understand the language of java script.  what makes it different from HTML and other coding programs and coding languages?"
  },
  {
    "message": "Really grasping JavaScript seems to be an issue of prolonged exposure to the syntax and route of thinking. Am I correct in this assumption?"
  },
  {
    "message": "I had a difficult time visualizing what some of the a free code camp challenges would look like once solved using Javascript. Any tips on translating a problem/ series of steps into instructions Javascript will understand?"
  },
  {
    "message": "I was wondering what is the difference between Java and JavaScript?"
  },
  {
    "message": "I haven't gone through JavaScript ES6 yet, but I am curious how different ES6 and ES5 are. Is it more syntax revisions, or new syntax all together?"
  },
  {
    "message": "Is ES6 rules for javascript? Do compilers only use ES6 now, or if you used rules from es5 would they freak out?"
  },
  {
    "message": "is destructoring a way to simplify things or make them longer?   also, since i am new to the javascript thing, I never really understood what ES6 is or what it may stand for?  i am getting confused between the differences with the names and syntax stuff."
  },
  {
    "message": "How is \"Use Destructuring Assignment to Assign Variables from Objects\" a simpler way and more useful overall? It seems more complex."
  },
  {
    "message": "I don't know if this has already been asked, but are there certain times where we use ES6 over JavaScript and vice versa?"
  },
  {
    "message": "I'm getting it but I'm not sure what Javascript I need to know before being able to get an internship? Different friends have been telling me to buy a $10 Javascript course from Udemy and that'll help.\nAny online course recommendations that will allow me to make cool projects so that I start to understand what Javascript can do for me?"
  },
  {
    "message": "I feel like I know what to do to get the code doing what I want, but I don't know when to use it. Having more context I feel would help me. I like FreeCodeCamp because it lets me know what I'm looking at when Thor goes over it in class, and it's when he explains it that it all really clicks for me."
  },
  {
    "message": "Since I am quite new to JavaScript, I am confusing code names for actually syntax, and it's been a bit difficult to figure out what is syntax in Javascript because of that. Is there an easy way to tell the difference so I can better learn the syntax?"
  },
  {
    "message": "I have a hard time placing context into what the lessons are trying to teach me. Does anyone have any other resources that help explain what we're learning? For example i have no idea when I'd use destructuring or getters/setters."
  },
  {
    "message": "I know other people have already mentioned it and asked questions, but the destructuring section was pretty difficult and confusing. How often would someone use destructuring?"
  },
  {
    "message": "I don't understand the purpose or role of the Constructor element?"
  },
  {
    "message": "Why would functions be written any other way other than with a concise declarative function?"
  },
  {
    "message": "it is somehow confusing the destructuring assignments. there are some syntax that we are required to use but it doesnt explain exactly what it is like reduce and map"
  },
  { "message": "What are certain ways that you should use let over const?" },
  {
    "message": "There was already a question about encapsulation here, but I would also like more of an explanation on what it does and how it works."
  },
  {
    "message": "My question on this unit is just whether we will be using ES6 or ES5 in our projects?"
  },
  {
    "message": "Are Let statements more  acceptable than var statements? Java seems to like using both, but it gets confusing on which one is better than the other."
  },
  {
    "message": "In python you have to download certain extensions to use the different versions (like Python 3).  Is it the same way with Javascript?  Also, why are we learning ES6 when they are newer versions?"
  },
  { "message": "Is ES6 part of JavaScript or are they different things?" },
  {
    "message": "My biggest issue with ES6 was with the 'Create Strings using Template Literals' section. I followed what the example said to do and that resulted in errors. I also reached out online to find solutions and there wasn't much help out there either, even though they all looked the same as mine and I still get errors. I ended up finding the following\n\nto loop through the array. It should have done the same thing. Before trying this, I kept getting 'React is not defined'."
  },
  {
    "message": "I don't understand why you would use let and not always constant. When would you want to modify your code down the line?"
  },
  {
    "message": "When do you use ES6 and when do you use JavaScript? Do they go hand in hand and support each other or do you use one or the other?"
  },
  {
    "message": "are the import functions similar to importing libraries in Python?"
  },
  {
    "message": "What is the purpose of encapsulation and how does using getters/setters accomplish that purpose?"
  },
  {
    "message": "is Encapsulation, Polymorphism, Inheritance used the same in javascript as it is in other languages?"
  },
  {
    "message": "I was just wanting clarification on the difference between console.log() and return?\nI guess this is the same question that many people had."
  },
  {
    "message": "what is the difference between the prototype and a supertype?  can a prototype become a supertype in code?  and how can that happen?"
  },
  {
    "message": "How does Object Oriented Programming get updates and who creates these updates?"
  },
  {
    "message": "I don't understand why you would like to use an anonymous function. Is there a difference between console.log() & return? I found this unit the easiest to dissect, but applicability is still hard for me when everything is still pretty conceptual."
  },
  {
    "message": "Does creating a class in JS create an traditional class or does it use the object properties to accomplish this?"
  },
  {
    "message": "I have enjoyed learning about how to return things and use this part of Javascript. I guess my question would be when is the best time to use this in a modern website, I can see of a few cases where it would be very useful just wondering what others think"
  },
  { "message": "In which instance should I use console.log() vs return?" },
  {
    "message": "Is helpful to anyone else to think of using all these concepts in a larger format? It used to take me awhile to understand the concept before I would think about using it I  large data sets or a large program"
  },
  { "message": "When would be the best instances to use a constructor?" },
  {
    "message": "I'm still a bit confused as to what 'object-oriented' actually means and how it is different from other programming"
  },
  {
    "message": "I guess I was a little confused with the Prototype Chain. What exactly is it and what purpose does it serve? This may be a dumb question and it may be really simple. I was just kind of lost trying to understand it."
  },
  {
    "message": "I've noticed the repetitive and usefulness of having 'this'  keyword. Is there an 'that' keyword, if so how do we use it compared to using 'this'?"
  },
  {
    "message": "My question is about constructors. In regards to the types of data you can put into the constructor. Can you put arrays, functions, methods, other constructors and such in them? I know in computer science, they were very powerful, but I wonder to what extent can they be manipulated and added to?"
  },
  { "message": "Is there a difference between console.log and return?" },
  {
    "message": "Why are object relationships/inheritance called \"Parent/Child\" in C++ but \"Supertype/Subtype\" in Javascript? Doesn't that just confuse people?"
  },
  {
    "message": "Can mixins only be used on objects? Can they be used on other things such as prototypes?"
  },
  { "message": "What is the difference between this and return/ console.log?" },
  {
    "message": "What is the difference between console.log() and return? Is there a time where one would be better than the other when returning a string?"
  },
  {
    "message": "Methods, functions and constructors. They all seem like they do the same things, whats the main difference between the three?"
  },
  {
    "message": "my question as i was doing this assignment is, when we create a loop in an array, is there a limit to what we can put inside the array, or can it be infinite?\ni also noticed that the color and look of the free code camp site had changed.  it made me question myself if this was still the same site."
  },
  {
    "message": "I guess after going through this curriculum I am just curious about what the specific uses are in modern websites. As in, I feel like I understand the theory but am still trying to figure out the application?"
  },
  {
    "message": "It was a little bit hard to create the multi-level arrays. Is there are an easier way to create multi-level arrays? I got lost in what level I was working on"
  },
  {
    "message": "Is all data for front end web development stored in Objects as we saw in this exercise? are there other ways to contain data?"
  },
  {
    "message": "the \"Iterate Through the Keys of an Object with a for in Statement\" lesson was/is really difficult. I am stuck on it and can't get passed it."
  },
  {
    "message": "This unit was pretty smooth for me. I do still have trouble with for in loops. Why is it exactly that you have to use the bracket notation instead of the dot in the iterate through keys code camp challenge?"
  },
  {
    "message": "Did anyone else have a really hard time figuring out the\"Iterate Through the Keys of an Object with a for...in Statement\" lesson? I couldn't figure it out, even after reading forums and watching video tutorials.\nHow did you solve this one?"
  },
  {
    "message": "How have data structures changed since the beginning? Are they completely different?"
  },
  {
    "message": "Is there ever a good reason to write out nested arrays in the \"expanded\" form that takes up several lines, or is it always better to simplify it to take up as little space as possible?"
  },
  {
    "message": "I was going through the lessons, and to push and unshift, instead of referencing the name (ex. mixedNumbers) in the function, we referenced the (arr) that was in parenthesis after the name mixedNumbers. Why is that?"
  },
  {
    "message": "Was anyone else having issues with challenge 18/20? The \"Iterate Through the Keys of an Object with a for...in Statement\" challenge. I could not get it to work and the hint is wrong as well.\nAlso, how is this supposed to be submitted since you can't see our profile picture in the top right anymore with the new interface?"
  },
  {
    "message": "It is funny to me how similar python and javascript are.  I wonder why that is.  I always thought that it was fun to use .pop() in python, and now I get to use it here to!"
  },
  {
    "message": "Pop, splice, etc feels like it clutters the code when it'd be easier to just change the original array. Is it used mainly for large sets of code that'd be too tedious to locate in the original array?"
  },
  {
    "message": "Whats the most common uses for basic data structures in modern websites ?"
  },
  {
    "message": "Web development sure loves to use arrays especially the pop, shift, unshift, and push features. What is the backstory for the creation of the pop instead of using pull ( the antonym word for push)?"
  },
  {
    "message": "We learned multiple ways to remove objects from an array, such as shift, pop, and slice. Why are these methods more useful than deleting those objects?"
  },
  {
    "message": "FCC for me has a new interface, is this the same for everyone else?"
  },
  {
    "message": "I know there are a lot of learning tools out there, such as flexbox froggy for flexbox. I feel it would be helpful to have a website similar to that but for data structures, does anyone have any to recommend."
  },
  {
    "message": "What is the difference between a method and a function? Also, from what I could tell \"properties\" and \"keys\" referenced the same thing within an object. Is there a difference?"
  },
  {
    "message": "Going through the CodeCamp and most of the basic data structures is all about arrays and objects. Are there other structures we need to know about to make code more efficient?"
  },
  {
    "message": "In module 11, does anyone how to use the promise data from the .then function in other functions? I had worked on this for 2.5 hours with the tutor but we couldn't figure it out. We also had trouble with the event parameter that is supposed to match ids with name items in the database. What should the event input be?\nEvent Section\n\nfunction hotelInfo(event) {\nlet hotelChoice = hotelData[0].hotels.find(hotel => {\nlet answer = \"false\"\nif(event.target.id === hotel.name){\nanswer = \"true\"\n}\nconsole.log(answer)\nreturn event.target.id === hotel.name\n})\nconsole.log(hotelChoice)\n\ndocument.querySelector(\"#hotelInfo\").textContent = `${hotelChoice.name} Hotel`\nconsole.log('Thanksgiving')\n}\n\n.then section\n\ngetHotelData().then(data => {\n// console.log(\"then test\")\n// console.log(data)\nreturn data\n})\n\nlet anchorObject = document.querySelectorAll(\"a\")\n\nconsole.log(anchorObject)\nfor (let i = 0; i < anchorObject.length; i++) {\n// console.log(anchorObject[i])\nanchorObject[i].addEventListener(\"click\",() => {\nconsole.log(anchorObject[i])\n\nconsole.log(hotelData[0].hotels[i])\nhotelInfo(anchorObject[i])\nconsole.log(\"click\")\n} )\n\nThank you!!"
  },
  {
    "message": "Does anyone know how to  get the return value for module 4 (fortune teller) getFortune switch statement? I keep getting the month and date but the fate only has the numbers. Thor said to look at the return MDN page and googling a bunch of things but I couldn't find anything. I also tried const fortune = getFortune(fate) but that didn't work. Any ideas? Thanks."
  },
  {
    "message": "Anyone else having issues at the end of Unit03 with the ribbon continuing to paste itself upon the page after multiple clicks of the button? Been trying to tackle this problem for hours to no avail. Figured out that 'ribbon' does have childNodes."
  },
  {
    "message": "I'd like a bit more clarification on props. Max created the prop Quotes and then reintroduced it into."
  },
  {
    "message": "Are slots used mainly for passing styles and static elements around or is it made for passing, both styles and logic?"
  },
  {
    "message": "Why would you style an h2 attribute in the child when it gets called in the parent, so is the slot attribute calling it in the child?"
  },
  {
    "message": "Wouldn't just using regular components be better than using slots? It seems like slots make it so that there is a ton of information on the parent instead of the children."
  },
  {
    "message": "Should we always be trying to use slots to pass information? Or is it situational?"
  },
  {
    "message": "Are there any obvious limitations or restrictions as to what we can put inside the component tag? This is content"
  },
  {
    "message": "In one of the lectures he noted a change with Vue that let you style slots from within the parent component. When would it be useful to do that rather than style them within the child?"
  },
  {
    "message": "You know how you can set global variables using .PHP and write something like: can you do the same with VueJS using components by including that in other parts of your HTML documents?"
  },
  {
    "message": "Are there any more uses for the :is attribute or is it only for dynamic components?"
  },
  {
    "message": "Should I stage all the data that I work with in App.vue and simply pass information with slots? Is that industry standard or should I be calling a creating data within specific components with specific API calls?"
  },
  {
    "message": "When building an application, is it better to just switch between components using something like slots or to use Vue Router to show different screens?"
  },
  {
    "message": "At the end of the module, he used \"scoped\" within the style tag so the styles would only apply to that component. What is the benefit of using \"scoped\" rather than just adding your own classes to the component and adding styles to those classes?"
  },
  {
    "message": "So if I am understanding him right regarding components, as in regular HTML, you cannot create your own tags, unlike custom ID's and Classes, however, you can create your own custom tags if you declare them using VueJS?\n\nAs such:\n\n-------------------------\n\nVue.component('formbody', {\ndata: function() {\nreturn {\nstatus: 'Example Form'\n};"
  },
  {
    "message": "A component only allows you to use one element within it such as a div. Do you think it's bad practice if we nested multiple divs within the main div? or would it just be better to create multiple components."
  },
  {
    "message": "As our components grow larger and become more complex, is it ok to nest other divs inside of divs of a single component, as long as each element is contained under that single root element?"
  },
  { "message": "What is the Shadow DOM?" },
  {
    "message": "Following along with the videos, I was attempting to use v-for on my 'app-server-status' component and it kept giving me the error of \"Custom elements in iteration require 'v-bind:key' directives\". What does this mean?"
  },
  {
    "message": "Max mentioned the 'Shadow DOM' and that there was a DOM behind each element.  Does this mean that there is a separate DOM behind every little thing in an app or webpage? Which DOM is impacted first when an element is changed or manipulated?"
  },
  {
    "message": "I couldn't add Bootstrap to my vue project. Could you please show us how to do so? I used vuetify instead ."
  },
  { "message": "Can you use data as an object?" },
  {
    "message": "How would we use methods and functions in a vue cli setup? Would they go in the individual components or the js file?"
  },
  {
    "message": "I attempted to add some script tags within a template element and I got a warning that I have to remove them. Why is this?"
  },
  {
    "message": "Can we write SASS in our Vue components? Is there anything special we need to configure in order to make this happen?"
  },
  {
    "message": "Are there any examples of when we would want more than one root element within an application?"
  },
  {
    "message": "Is webpack used elsewhere besides in Vue JS development? I've never heard of this before and I'm still a bit lost as to what it's actually doing. Is it running the development server?"
  },
  {
    "message": "How exactly does everything in the entire VueJS project compile into one single file? Would this be the only file we need to upload to the server once the entire project compiles?"
  },
  {
    "message": "While you are installing the npm with vue. How would we go about uninstalling the package if needed?"
  },
  {
    "message": "What do they exactly mean when they say they need to run VueJS through a server with http?"
  },
  {
    "message": "When using localhost with the terminal, is there a way to use a command to end or terminate the session?"
  },
  {
    "message": "Is a common workflow to import our css boilerplate to our .vue files and then apply template specific styles within each?"
  },
  {
    "message": "Are we going to learn how to always connect to the localhost server through the command terminal, or are we expected to already know that? If so, can we run through that so I can take down some notes? On a side note, I am way excited to really get moving. Woo!"
  },
  {
    "message": "What exactly happens when we run the build command? Does that just give us files that we can then upload to a server?"
  },
  {
    "message": "I was confused when we changed directory to vue-cli/ then ran the command npm install, what is happening? What is installing?"
  },
  {
    "message": "I wasn't sure about the npm run build command.  I get that it bundles everything for production but how can we use that and why would we want to?"
  },
  {
    "message": "When uploading final projects to the remote server, would you leave our the src folder? Also, not sure if this is related, but is there a way to use git to upload to a remote server instead of using a traditional ftp client like filezilla?"
  },
  {
    "message": "So right now, in a node application I use\n\napp . set ( 'view engine' , 'ejs' );\n\nThis lets me use .ejs extensions to compile into html and have them be rendered to my user. Would I just change the view engine to something like .vue? And the start of a node application is usually app.js, not index.html. How do we incorporate Vue into our web applications so we can serve Vue instead of HTML or ejs or something?"
  },
  {
    "message": "In the actual development field will we ever use webpack-simple or will we typically use something more advanced like webpack when creating our projects? If so, how important is it that we learn the process of configuring webpack?"
  },
  {
    "message": "How common is it to use multiple vue instances?  Max gave a few examples, but are there best practices such as when and how to use them?"
  },
  {
    "message": "It seems like it would get really messy to have too many Vue instances. Is there a general idea on when it becomes too complicated?"
  },
  {
    "message": "How do you exactly make it so the DOM is automatically updated with the data changes?"
  },
  {
    "message": "Max created a template with an H1. Are we able to further customize a template using css?"
  },
  {
    "message": "What are some examples of using a new Vue instance rather than a Vue component? Is it usually single vs multi-use?"
  },
  {
    "message": "I'm probably jumping the gun and maybe should wait to ask this but I'm on the third video and I'm still confused on the difference between just making a normal function VS vueJS Instance. They seem to do the same job from what max is explaining?"
  },
  {
    "message": "When would it be useful to use more than one Vue instance instead of just one? Is that kind of just to keep things more organized?"
  },
  {
    "message": "Do root properties (used outside of an instance) have any affect on the performance or life cycle?"
  },
  {
    "message": "What is the reason you would use destroyed to kill the vue.js instance?"
  },
  {
    "message": "Is the Virtual DOM that Max talks about something that actually takes up memory?  Is this something that we need to be aware of and monitor when using VueJS?"
  },
  {
    "message": "Max gave an example on how you can create a variable outside of the VueJS instance and pass this variable into the data: property of the VueJS instance. Is it common practice to declare many variables outside the VueJS instance for passing values?"
  },
  {
    "message": "I think it is super cool how you can use the VueJS instance in multiple cases. Is this also the case across different file types importing into the .HTML? I'd assume you'd just import it as a, but if you are going to do this, is there a way to make this cleaner, maybe by doing something along the lines similar to CSS preprocessing? Is this even a thing when it comes to JavaScript? JavaScript pre-processing? Lol"
  },
  {
    "message": "Max created a hypothetical element to show he could replace it with his template.\nIs this the standard? Do I get to make up weird element names now?\nAlso, is there a simple way of importing longer HTML code as a template?"
  },
  {
    "message": "If you use many different Vue instances, I wonder if there is some type of boiler plate Vue instance that gives you a lot of common functions that you might use or if its better to make each one very specific?"
  },
  {
    "message": "Is it common to have multiple VueJS instances in the same Javascript file or is it more common to split them up over multiple files and just import them as needed?"
  },
  {
    "message": "I am not sure I understand in the example when Maximilian changes the percentage of the background color for the progress bar. I don't understand why it would change the outer div and not the nested div. How would it know to reference the parent div and not the nested one?"
  },
  {
    "message": "Not specifically about the project, but is there an optimal way to debug CSS when working with Vue.js? Like if I wanted to play around with how a button looks, but the button only exists during a certain condition it would be annoying to have to resetup the condition after every refresh."
  },
  { "message": "I'm confused as to what the v-for directive is used for?" },
  {
    "message": "I absolutely love the idea of health level bars interacting with the buttons, however, can we add our own twist to this project such as adding an image of a monster for both characters? Maybe even adding the ability to enter your own name as \"You\"?"
  },
  {
    "message": "How many functions is too many functions? Is there a point where turning a block of code in one function into another function isn't helpful? Or should we only do that if that particular block of code is used more than once?"
  },
  {
    "message": "Are there any good devtools for vue.js that can help us in debugging and understanding our code within the browser? This could help out tremendously when testing my code."
  },
  {
    "message": "I've noticed the usage of \"push\", and \"unshift\" in the videos. Does Vue.js feature other array methods (pop, shift, etc.)?"
  },
  {
    "message": "Does Vuejs require a specific order when creating methods? For example do the button elements need to be addressed above the other functions that are called such as calculateDamage and checkWin?"
  },
  {
    "message": "It was mentioned in class that the better method for using Vue is in script tags in the HTML file.  In the videos for The Monster Slayer, he used a separate app.js file.  When should we use a separate file and when should it be included in the HTML file?"
  },
  {
    "message": "Maybe I forgot, but when is it required to use {} inside an attribute value?"
  },
  {
    "message": "One thing I was a little confused about was attaching the classes at the end of the project. Why is it turn.isPlayer instead of turns.isPlayer. Turns is a data element that's an array. Can't we access data elements with v-bind without the v-for directive?"
  },
  {
    "message": "In the video \"Creating an action log\" he throws in the \"Unshift()\" and says its the opposite of \"Push\" but can you please help me understand what he is exactly doing with the \"Unshift()\" and needed in the Monster Slayer?"
  },
  {
    "message": "Would having used computed instead of method been better anywhere in this project?"
  },
  {
    "message": "Is the window redoing all the items each time my log updates or only the few that are added each time?"
  },
  {
    "message": "While using v-for he used i to get the index of the items in the list. I am confused on how that works exactly. Is it just something behind the scenes within vue.JS?"
  },
  {
    "message": "How would you override an element in an array to remove it and shift the remaining elements?"
  },
  {
    "message": "What are some example scenarios for using a template element over a div?"
  },
  {
    "message": "I may have not noticed this in the videos, but with v-for are you able to output specific items in the array?"
  },
  {
    "message": "I like v-if and the v-else, rather than using an if else statement in regular JavaScript. How might this be easier to utilize than a regular if else statement? I liked his example of turning on the text with the Hello! tags within the tags element."
  },
  {
    "message": "I'm still not understanding the \"key\" attribute.  Is this an attribute that is only used when rendering lists or can it be used elsewhere?"
  },
  {
    "message": "After watching this section, it got me thinking about responsive navigation. Which directive would best be used when creating a responsive navigation that opens and closes?"
  },
  {
    "message": "What kind of circumstances would we want to use the v-show versus the v-if directive? I am trying to figure out what is the advantage of detaching an element from the DOM versus only ‘hiding’ it by using the v-show(display:none)."
  },
  {
    "message": "Couldn't we just do all this stuff within functions(methods) in the javaScript? What is the point of doing it in the HTML?"
  },
  {
    "message": "I don't quite understand the key attribute.\nCan I do anything with the assigned value or is it just automatically handled by Vue?\nAlso, where else can I use the key attribute aside from a v-for loop?"
  },
  {
    "message": "I'm not sure how to post screenshots but in the video \"Looping Through a list of numbers\" he talks about the following code:\n\nv-for = \"n in 10\"\n\nI just want to clarify because I was confused when he was explaining that vue recognizes the number 10 and loop through the range of numbers until you reach 10? I just thought that whatever was in \"\" was just for display"
  },
  {
    "message": "When using the v-for directive, is there a reason you'd want to extract the index of an item in a list other than for testing purposes?"
  },
  {
    "message": "How do I know what values are automatically assigned to which areas on v-for?"
  },
  {
    "message": "Not sure if he said this and I missed it, but why does the nested v-for have a key property while the parent one doesn't?"
  },
  {
    "message": "When are some times when you'd rather add \"display:none\" to an element with v-show than completely removing it from the DOM with v-if?"
  },
  {
    "message": "VueJS seems like a nice framework to work with. I am curious if you can implement ES6 JavaScript syntax in each instance of this framework? Can we use arrow functions? I would like to use more ES6, so I can become more current with this language."
  },
  {
    "message": "The company I work for right now uses React which made me question why they would be using React over Vue JS as he makes Vue JS sound like the superior framework. Is it because React can do certain things Vue JS can't do? Or do are they just behind and eventually going to want to switch to Vue JS?"
  },
  {
    "message": "I really like the potential of what I'm learning so far with Vue. I'm trying to understand how to use 'this' correctly, does it refer to the Vue object we created?"
  },
  {
    "message": "He talked about the framework only taking up about 16kb of space, and that it featured a lot of essential features. Does VueJS allow interactions with other frameworks like React, Angular, etc?"
  },
  {
    "message": "So I wanted to clarify- does the vue instance let you change whatever property it holds, or is that what the specific el property does? Also, the guy in the video tells us that this framework is extremely fast since it just uses javascript in the browser, is interacting with a remote server still possible? What is Vue mostly used for? building games, websites, etc?"
  },
  {
    "message": "I like how Vue can manipulate the dom and how he it incorporates a few of the basics from vanilla JavaScript. I am initially wondering how the dom will be output to tools such as a screen reader or other dom related accessibility tools"
  },
  {
    "message": "We touched on this briefly last class but I wanted to dive a little deeper with comparing the pros / cons of Vue compared to other frameworks such as React."
  },
  {
    "message": "One of the major struggles I have had with JavaScript throughout my semesters at UVU is that they have all been done in \"projects\" such as creating games or creating small tools, which is really cool, however, it is not really clicking into making it work on a website and connecting it all. The very nice German instructor in the videos really seems to make sure we are going to be taking this VueJS and making it interact with other parts of a website such as the HTML, at least that is what we did right away. Is this something you think we will be doing from here on out in this course?"
  },
  {
    "message": "In the video, he talked about Vue being able to work with \"http.\"  What exactly does this mean and can it also work with https?"
  },
  {
    "message": "Directives I thought were one of the coolest parts of this section. With anything ill have to learn all of the different directives in Vue. while I was researching directives I noticed that there are also custom directives. Does anyone how to use these? This might be out of the scope of this section but I wanted to know."
  },
  {
    "message": "What exactly is the \"v-on\" directive? Are there other directives?"
  },
  {
    "message": "I'm sure this will get answered soon but I'm curious about Vue instances and how to output multiple components. Are components all outputted through one instance or do we have to set up multiple instances?"
  },
  {
    "message": "Not an immediate question, just want to make sure I'm understanding this right. \" event . target . value\" references the event that triggered the method, the target of that event, and then the value of that target - right? That's where we get those values?"
  },
  {
    "message": "Vue seems like a great way to interact with the DOM but will it make interacting with APIs easier in any way or do I need a separate framework for that? Are there any issues with cross compatibility on browsers that might arise if I am supporting legacy browsers?"
  },
  {
    "message": "Are there more properties available to use in a vue instance other then \"data\" and \"method\"?"
  },
  {
    "message": "When VUE is installed globally for an application is the script import required on every page, especially when using blade.php and .vue for your page management?"
  },
  {
    "message": "I have little to no experience when it comes to Javascript Frameworks, such as Angular, React, and Vue, so I guess my question is: How similar are each of these Frameworks? Is it important to learn just the basics of each and be an expert at one? Does it just depend on what the company you work for uses, or does one have a higher importance?"
  },
  {
    "message": "What are some good examples of when to use a framework like Vue.js and when is it better to just use regular JS without any frameworks?"
  },
  {
    "message": "Will the \" this\" keyword always point to the parent Vue instance? Looks like others have similar questions -- maybe I just need a better understanding of how scope works in JS."
  },
  {
    "message": "Do you recommend putting Vue scripts in a separate JS file and referencing it in the HTML header, or just putting it in"
  },
  {
    "message": "In the video he mentioned that VueJs beats Angular and React in runtime and other benchmarks, what are some specific instances in which Angular or React would be a better choice, if any?"
  },
  {
    "message": "I started in CS at UVU and I was wondering how similar VueJS might be to something such as C# and C++. They all seem to be object oriented languages, but C++ can be extremely complex. Is VueJS going to be just as complex?"
  },
  {
    "message": "can the el directive be used to manipulate multiple elements at once?"
  },
  {
    "message": "Every time you do a new project for VueJs, do you have to do \"creat my-app\" and all the other set up every time you start one? Or is there a fast way to constantly start new and separate VueJs projects?"
  },
  {
    "message": "Is there a special Vue way to have the Vue data be the result of a HTTP request or do you have to make the request separately then pass it into the Vue constructor?"
  },
  {
    "message": "How are you able to get this.title without going through the object? I'm curious what people think of this and if it causes problems later on once the code gets more complex?"
  },
  { "message": "Why do arrow functions not work in a Vue instance?" },
  {
    "message": "I guess my biggest question at this point is how to get the parent/child relationships between components to work -- I'm trying to implement the tutorial stuff locally but the local version of vue seems to have everything split up.  App.vue doesn't seem to be getting the value of \"title\"; and the method \"changeTitle\" I can't get to work from the child component (I've named jsfiddle001.vue).  Anyone else having similar difficulty?"
  },
  {
    "message": "Does VueJS need to have a new component for each section, when breaking onto a new page will there need to be another JS file that contains the components pertinent to that page?"
  },
  {
    "message": "Does Vue uses the same coding in javascript langauge? Or is just a small part of Vue that is placed inside the javascript script with double bracket only?"
  },
  {
    "message": "How can you directly access this.title when it's inside the data object without referencing the data object?"
  },
  {
    "message": "I am wondering, does data act kind of like $scope in AngularJS?"
  },
  {
    "message": "Would you need to create a new Vue for each part of the page you want to control with vuejs, or would you just put a div around the entire page and create one new Vue?"
  },
  {
    "message": "When might you want to use watch instead of the computed property?"
  },
  {
    "message": "When talking about the \"event\" object why does it need a $ in front of it? i.e. $event.target.value"
  },
  {
    "message": "Could we use the same method name and just a different amount of arguments when listening for different events?"
  },
  {
    "message": "I'm having difficult understanding what's computed property. Can you clarify on that?"
  },
  {
    "message": "Same question as others. I am confused between the computed and method sections. What is the difference?"
  },
  {
    "message": "I'm a little confused on what exactly a computed property is,  and would love a more in depth explanation."
  },
  {
    "message": "If I want to use a method to call data from the API endpoint then modify the data. Would it be more efficient to grab and modify that data on the API side with a transformer.php, on the frontend with my controller.php or in an HTML method? Again this could be for scaling applications, but just curious."
  },
  {
    "message": "I guess I'm wondering just how much styling should be done with Vue JS rather than another CSS file? I am also confused about computed properties and would like more explanation on those."
  },
  {
    "message": "I am very confused with computed. How exactly does it work differently to methods?"
  },
  {
    "message": "Just because I don't think I hear Max really talk about it yet, what would be a good example for when you would utilize multiple Vue instances? Although Vue is doesn't hurt a page's load time, would having multiple Vue instances do so?"
  },
  {
    "message": "When working with events (like v-on:click or v-on:mousemove), is it generally accepted in the industry to write simple functions directly in the HTML instead of passing it a function? Interested to know if there are any best-practices here. In CSS, I’ve been taught that you should try to refrain from making styling changes directly in the HTML whenever possible, so I wonder if that policy persists in VueJS.\nI'm also interested to hear more examples of when you'd wanna use watch properties."
  },
  {
    "message": "What type of changes can you watch for in the watch property? Is it just any change?"
  },
  {
    "message": "I'm a little confused -- what is the difference between \"computed\" and \"method\"?"
  },
  { "message": "Can you explain more on what a computed property is?" },
  {
    "message": "is it possible to change the size of a box on hover with VueJs? Something like on:click.\nWould it be on:hover?"
  },
  {
    "message": "My question is in regards to v-once. I was curious if there are specific examples of when this is utilized, and if there are other directives similar to v-once which can be used elsewhere in the code."
  },
  { "message": "Is everything stored as an object in Vuejs?" },
  {
    "message": "Does computed only execute if the variables in it change? What triggers it?"
  },
  { "message": "Can you name space the event listeners?" },
  {
    "message": "Is there a way to do something similar to a switch statement directly in Vue? Or just use the if-else syntax that was shown?"
  },
  {
    "message": "Should we be using latest kind of version like avoid using old ones with like v-bind to :  and @ shorthand name. It remind me lot same with JavaScript example, book function() becomes book() in ES6 updated version."
  },
  {
    "message": "In what cases is it best to use v-show to hide an element compared to v-if where you can completely detach the element?"
  },
  {
    "message": "Will he be getting into key-value pairs more in-depth? I think those end up being the building blocks once the API is added and helped me a ton."
  },
  {
    "message": "When it comes to rendering lists and using conditionals - is it traditionally best practice to keep these functions separate in the same .js file?"
  },
  {
    "message": "Can you describe an instance in which utilizing @click=\"\" vs. v-on:click=\"\" is more appropriate than the other, and vice versa? Max mentions short hand, however I was curious what the point of one or the other was, and if there was a syntax purpose to v-on:click vs. just @click, if that makes sense. Also would you just recommend us going to Vue.js' website to find documentation on event handling short hands?"
  },
  {
    "message": "Wouldn't we always just want Vue.js to store the actual element in the list and not just it's position? Why don't we always just use the :key bind attribute and give it a unique identifier to be safe, like Max says?"
  },
  { "message": "Can you use v-show with an else statement?" },
  {
    "message": "Things are starting to make more sense as I go through more videos. A question I have is use cases for switching between v-if and v-show. I can see both being useful, but I don't know specific instances when I would use them yet. A lot of this is still new to me though."
  },
  {
    "message": "Are there reasons for completely removing something from the DOM when using v-if? Why not just always use v-show when applicable."
  },
  {
    "message": "Most of this section was pretty clear. I guess when we start getting into more complex work with these though it will be more important to know when to completely detach an item from the DOM or to keep it. So my only question I guess is: in what situations would you want to keep all of the data vs when we should detach it?"
  },
  {
    "message": "When rendering a list, would there be a way to access only one item on the list? or in the case of a longer list, only loop through/render the first three?"
  },
  {
    "message": "is there a link to more info about conditionals? Is MDN ideal or is there something more convenience?"
  },
  {
    "message": "How does using :key preserve the order in the list? If a :key was used that was not unique for each value, what would the output be like for the values that were identical? Would the items that had a unique key given stay in the same location and the identical key values be jumbled?"
  },
  {
    "message": "I don't have a question on this section. Everything was pretty clear. These ways of using v-if, v-else, v-show, and v-for are so awesome!! So much easier than having to write a function to do these things. Do you now how easy it will be to do a modal with these now!!? And other things too!"
  },
  {
    "message": "Since v-if actually detaches items from the DOM, not just hides them, does this cause any issues? With v-show, when would you want to completely detach something from the DOM rather than hide it with CSS?\nDo you always want to use :key or is it okay to just have VueJS save the location of the changed item(s)?"
  },
  {
    "message": "What is a use-case to wrap content in a template instead of a div?"
  },
  {
    "message": "should you use the normal javascript conditional / loop syntax in \"computed\" or \"method\" when you are doing more complicated stuff, or does Vue have special ways of doing that as well?"
  },
  {
    "message": "Is it possible to use an if or conditional in attributes or would you need to use a method to handle the conditional before applying the desired attribute value?"
  },
  {
    "message": "Like many others in the discussion, I am having some confusion about best use cases with methods and computed."
  },
  {
    "message": "Looks like this is going to be first project on my own ideas. Not sure how much need to be done. I haven't started the video yet. Wondering if we have to use some kind of compute and watch in this project? Something we could work around to get project done."
  },
  {
    "message": "I am also used to using computed and watch properties for efficiency. Is mam just teaching basic principles that he will build on later in the program? Which are more efficient for scaling purposes?"
  },
  {
    "message": "This is a discussion that has made me think as to what I need to ask. I still am confused about computed and watch methods. Max did not cover these, will they be further explained in the future?"
  },
  {
    "message": "what would be a scenario in the monster project where you would want to use a computed or watch property rather than a method?"
  },
  {
    "message": "I personally created a new application/folder and started the monster slayer there, I hope that is okay.  Because I didn't have many questions on much else, other than perhaps where to find a list of the short-hand event listeners, I agree with Peter in that when would be best to utilize Watch vs. Computed vs. Methods? In this instance we used methods, but maybe the repetition would be helpful to drill in our heads when would be best to use each type. I hope this makes sense. Thanks!"
  },
  {
    "message": "I think so far my questions are that I noticed Max used var instead of let/const. Is this something we should be doing or what is the best practice for us? I was also wondering about setting up the environment. Are we just building the monster app in the same app we've already started?"
  },
  {
    "message": "I'm confused about how what the file structure should be like when doing this assignment. I tried using the files that I installed Vuetify on and there are so many files. I also see multiple index.html files as well. Just curious if I should just use his original files or work on the one I installed and uploaded?"
  },
  {
    "message": "I want to call two functions with one button click using \"v-on:click\". What is the best way to do this?"
  },
  {
    "message": "I'm also a little confused about the computed and watch properties. What would be a case where you would want to use them over the methods property?"
  },
  {
    "message": "When I'm calling a function from my HTML (maybe with v-on:click ) , do I ever need to include parenthesis after the function name? Example: v-on:click=\"functionName()\". If not, why?"
  },
  {
    "message": "This wasn't covered in the materials, but the project did make me wonder if you can use a switch statement instead of if-else statements?"
  },
  {
    "message": "I'm also still sort of confused as to the \"best practice\" as far as using computed vs. method -- did this project not require computed properties?"
  },
  {
    "message": "I'm interested in putting in code to make it so that you can only heal about 3 or 4 times when battling the monster. That would make it fair in the game if you were limited to healing."
  },
  {
    "message": "I'm grasping at straws as what to ask for this one. I think I already know the answer to this but would it be better to use v-if and v-else, or v-show for displaying/hiding the buttons? I think it is better to use v-if because it removes the html from the DOM, any thoughts?"
  },
  {
    "message": "My question goes along with Peter's questions because I didn't really have any questions on anything else. When do you use Computed, and when do you use Methods for functions?"
  },
  {
    "message": "Max didn't use Computed or Watch. Are there any best practice rules that would dictate when to try and use either of those instead of just doing everything in methods?"
  },
  {
    "message": "No questions from me. Of the big 3 JS frameworks (Angular, React, Vue) Vue seems to be the simplest and provides a very useful way to inject chunks of JS as we've been doing onto an existing page without having to rewrite the whole page in a JS framework. The Vue Component approach sounds interesting."
  },
  {
    "message": "In what cases would using the $ref property to access html elements outside of the VueJS instance be helpful?"
  },
  {
    "message": "This section is kind of odd where HTML template goes into new Vue ({ template:  ‘ hello ’ });  Does that mean if I look up in HTML page’s source, it wouldn’t show hello so it’s hidden into JavaScript? I’m curious if all three are combined into single file components and will it still show separated HTML, CSS, and JS in source?"
  },
  {
    "message": "Will any work that we do this semester ever use the root version of the VueJS instance?"
  },
  {
    "message": "What is a good example of when you would want to mount rather than just use el: ?"
  },
  {
    "message": "Love the onChange Method he has set up and how he's using it. Any other examples of an instance where this would be used over a watcher? All great examples. Not a lot of questions so far. Great tutorial!"
  },
  {
    "message": "I saw that there is a specific way to do a template, which is good to know. Is there a way to pull API into this Vue template and do cool things?"
  },
  {
    "message": "I would love to learn more about how Vue can help us in the workplace. When looking up jobs in the Utah County area, there are very few that mention VueJS if at all. Most mention React or Angular. I presume VueJS just falls into the \"ETC\" category of knowing a frontend JS library. Is it safe to assume after learning Vue, learning React or Angular could potentially be easier than if we didn't know any JS libraries at all? Also, could you explain the difference between the DOM and virtual DOM, if there is any?"
  },
  {
    "message": "In the case where he mounted the vm1 to #app1, once you found out where you wanted that code to be mounted, would you still keep the vm1.$mount(“#app1”); or would you just add the el: ‘app1’ and forget about the mount?"
  },
  {
    "message": "When would you want to create a data variable (or any normal javascript variable) before a Vue instance or to populate a Vue instance? I'm also wondering how to setup multiple Vue instances? Can it all be on the same app.vue file or different files?"
  },
  {
    "message": "What is a case where we would want to use multiple VueJS instances?"
  },
  {
    "message": "Do we need to set up components and templates differently when working on something that is all in one file, like the monster project example you did in class the other day?"
  },
  {
    "message": "I'm not clear on $mount.  I'm not sure why you would ever really use this."
  },
  {
    "message": "What is a practical example of a web application needing to destroy a Vue instance?"
  },
  {
    "message": "I'm not quite sure what the functional difference is between the DOM and the Virtual DOM"
  },
  {
    "message": "How would you use things like v-for in a component template?\nExample:\nVue.component('list', { template: ' {{item}} ' });"
  },
  {
    "message": "I'm new to all of the JS stuff that's come out in the last 6 years; are React and Angular structured the same way as Vue?"
  },
  {
    "message": "I don't really have a question. Everything was pretty clear. I just want to know how all of this works in the component based way of Vue using actual Vue files."
  },
  {
    "message": "Could you use an HTTP request to get a template to use for the Vue instance or component?"
  },
  {
    "message": "Do other frameworks have the capability to compile and send only the resources used in the project for smaller page sizes? If so which ones?"
  },
  {
    "message": "Personally, I'm still having a hard time understanding scope-of-data. When do I need to import one Vue instance into another? And what is that actually doing behind the scenes?"
  },
  {
    "message": "I thought we were doing single file components since there are other files that's included in export and import etc.  What's benefit about single file components?  I wonder how does adding several pages work?"
  },
  {
    "message": "With Babel installed in our package, we don't have to do any code for ES5 then correct?"
  },
  {
    "message": "Does Max utilize any Vuetify at all in the course of this series?"
  },
  {
    "message": "I'm a little confused about the differences between npm run serve, npm run dev, and npm run build."
  },
  {
    "message": "I'm a bit unclear on what the render function does in Max's Vue setup and how it works"
  },
  {
    "message": "VS Code has amazing debugger tools that integrate. That is one area I believe it stands out from PHP Storm. I love this resource in addition to the one provided in the course. It saves me hours when developing. https://vuejs.org/v2/cookbook/debugging-in-vscode.html"
  },
  {
    "message": "I'd love to learn more about all the templates Max spoke about, and discover which YOU would be best for us to use."
  },
  {
    "message": "Using the Vue CLI as he did with the webpack-simple template seems to use a lot of really old package dependencies. Is that template old? Is there a newer way since his course was made?"
  },
  {
    "message": "What are the advantages/disadvantages of different templates? Is there one that you recommend using?"
  },
  {
    "message": "How do components come into play in the file structure of a Vue project?"
  },
  {
    "message": "When Max was setting up his project it looked like there were a handful of different templates to pick from.  Is there a reason to use different templates for different types of projects?"
  },
  {
    "message": "What are the differences between the different Vue CLI templates?"
  },
  {
    "message": "I see that there is a file in \"public\" called Index.html. there is also app.vue which is in the \"src\" folder. what is the difference between the two, and what are the purposes for each?"
  },
  {
    "message": "I noticed that the way Max set up his Vue project is a little different than the way we did in class -  he didn' t use \"Vue create\"; and the contents of his project folders are different.  For example, in creating a new Vue object, he is using the \"el\" property to mount the app element where in the one that we created with vue create, it uses\nnew Vue({...}).mount('#app');\nI know that these do basically the same thing; but I was wondering if there is a preferred method?"
  },
  {
    "message": "Is there a preference on the best way to create a new Vue app in the Vue CLI between \"vue create\" and \"vue init webpack\"?"
  },
  {
    "message": "So when you separate the template the data needs to be in the same file? Is there a way to have generic templates to fit a consistent data structure, RSS for example, and have the templates separate entirely from the data and the Vue logic until the template is compiled? I hope my question is making sense."
  },
  {
    "message": "Similar to another question someone asked, I am curious about this:\n\nIf you're making a multi-page app, would you use dynamic components to navigate from page to page? Or does it not work that way?"
  },
  {
    "message": "when using @click=\"counter++\" can this just as easily be set to \"counter--\"?"
  },
  {
    "message": "Slots seem to be a usefuel way to pass preformatted html to a child. Props are used to pass other data that may or may not be displayed within the child component. Is there a benefit to formatting that info in the parent and passing with a slot over passing data through props and then displaying it that way?"
  },
  {
    "message": "It seems like these dynamic components are very powerful, what would be some good examples on how we use these dynamic components in our SPA?"
  },
  {
    "message": "What would be the best way to pass data dynamically to the dynamic components?"
  },
  {
    "message": "I imagine that your template would be universal for all pages and that the individual slots and components can be utilized in separate areas of the app or website I am building? Hope that makes sense."
  },
  {
    "message": "My question goes along with what other have already posted, if you're making a multi-page app, would you use dynamic components to navigate from page to page?"
  },
  {
    "message": "How would you handle routing between component pages in a non-SPA app?"
  },
  {
    "message": "I think I'm a little confused with the concept of slots. I guess I'm wondering why you would use a slot when you could just write in the parent? I don't see why you would use slots if everything is in the parent file anyways."
  },
  {
    "message": "Would this advance component section works on mobile hamburger drop down menu?"
  },
  {
    "message": "If you have a component being passed through in a slot, with a slot itself, can that slot be accessed at the first level?"
  },
  {
    "message": "What would be the application of using a slot instead of just putting the html in the child component directly? I’m having a hard time thinking of where you would use a slot but a prop or just writing the HTML in the child wouldn't work just as well."
  },
  {
    "message": "Max talks about three life cycle hooks.  Are there more life cycle hooks or are these three the only ones?"
  },
  {
    "message": "I have the same question as a lot of other people in this thread — if I am building a web application or dashboard with multiple tabs, would I just use dynamic components in the same way Max does here? Seems pretty cool."
  },
  {
    "message": "I have an array I made of cars and I have the image property for each object set as a URL rather than including the images in my build. I can't figure out how to make a Vuetify card display each image in the card image src."
  },
  {
    "message": "I think it's really awesome that you can switch between components with slots and the selectedComponent click. Would this be an ideal way to make a slideshow with arrows?"
  },
  {
    "message": "So do you just make a template for each page, and then pull in data on the fly?"
  },
  {
    "message": "In this section he showed us the slot and component built in Vue components. What other build in Vue components are there?"
  },
  {
    "message": "So is the dynamic component how you'd make a SPA? If you did your entire site in Vue.js would you just make each page a separate component and when you navigate change change to the appropriate component?"
  },
  {
    "message": "Will we normally allow all urls with the *, or is it more common to only allow requests from specific domains?"
  },
  {
    "message": "What would be an example where you don't need to authenticate requests in this type of environment such as a \"Facebook\" type concept?"
  },
  { "message": "Can use a GET request instead of PUT to create a resource?" },
  {
    "message": "Are there any standards we should follow when setting up pagination?"
  },
  {
    "message": "How is the setup different when using Vue.js? Are there any major differences?"
  },
  {
    "message": "It seems like using something like MongoDB is a lot more complex than mySQL. What are some of the advantages of a json database like Mongo?"
  },
  {
    "message": "I've been hearing a lot about 'hooks' lately... What's the big deal?"
  },
  {
    "message": "With the token generation, do you just randomly issue a token to users that use your API by having them generate it through the site or there other ways for the end users to get it?"
  },
  {
    "message": "Why would you \"throw\" an error and not \"next\" an error in a .then method?"
  },
  {
    "message": "Is there a standard practice for when to use POST vs when to use PUT?"
  },
  {
    "message": "Is it usually normal to have authentication on both the front and back end for a single input?"
  },
  {
    "message": "Do you ever need to authenticate requests looking for static items like images, stylesheets, ect"
  },
  {
    "message": "What would be benefits of not using express when building a REST API?"
  },
  {
    "message": "What are the best practices when connecting a REST API Node.js back end with Vue.js front end?"
  },
  {
    "message": "When working with Authentication, can a generated token be retrieved for the client if they forget their own password? I am just curious how this may work if a user may need to request a new password."
  },
  { "message": "What are the differences between REST and SOAP APIs?" },
  {
    "message": "Is REST the standard currently for API usage, or are there other modern methods?"
  },
  {
    "message": "Are GET, POST, PUT, PATCH and DELETE the only HTTP methods available?"
  },
  {
    "message": "Is Node kind of the standard for building REST APIs or are there other ways to build them?"
  },
  {
    "message": "As Max mentioned in the lecture, using feed.js, example: Facebook ( I am assuming uses an API of some sort pulling through users Facebook posts and displaying them through \"feed.js\" ), but how do you create an API then display it as Facebook does through the news feed?"
  },
  {
    "message": "When setting the access controls for the methods, is it okay to just set it to accept all methods instead of specifying?"
  },
  { "message": "How does a CORS proxy work?" },
  {
    "message": "While I know it can be, does anyone actually transfer data in a format other than JSON using REST API's?"
  },
  {
    "message": "Is using REST API's the most common development pattern in the industry? If not, what other types should we be aware of?"
  },
  {
    "message": "How do I export my '/' request into a router? Because normally the words that proceed go before the '/' like '/app' but if it is the index then it is just '/'"
  },
  {
    "message": "SpaceX has some really good data in their api. I will have to give this a try. Thanks for posting this."
  },
  {
    "message": "I feel like the further we go into these sections the more I see the abilities that PHP and Node (with other technologies combined) can do the same thing? So what is a better way to do this? PHP or Node?"
  },
  {
    "message": "Can CSRF attacks still happen even with adding the CSRF protection? Or are you guaranteed they never happen?"
  },
  {
    "message": "Is middleware only used to protect routes or is there other usages for using middleware?"
  },
  { "message": "Differences between CSRF token and JWT?" },
  {
    "message": "Are CSRF tokens specific to NodeJS, or is it just one of the methods of authenticating your users?"
  },
  {
    "message": "Are CSRF tokens specific to Node or are they pretty standard everywhere?"
  },
  { "message": "What are some alternative encryption methods to bcrypt?" },
  {
    "message": "I had never heard of CSRF attacks before. Are they very common?"
  },
  {
    "message": "Is there a context where we'd need to use authentication like this in an API, or is this mainly for projects that use NodeJs to deliver a view?"
  },
  {
    "message": "This kind of goes along with Mathew's question but is there a way to scan the packages we download before we use them for our project? Is there a safer way to download these packages since we will ultimately be using them in production products?"
  },
  {
    "message": "I really liked all of the packages that can be used for authentication. I had a basic question about who makes these packages, and if there is some sort of screening process for those who can make a package that can be included in a node.js app?"
  },
  {
    "message": "What other useful authentication packages like bcypt, csurf, and connect-flash are used in the industry that we should become familiar with?"
  },
  {
    "message": "With rest APIs, are auth tokens usually sent as headers or part of the URL or in the body?"
  },
  {
    "message": "I've heard Mongodb vs SQL depends on the scenario and application. What scenario is best for Mongodb, and what type of database is best for large scale applications?"
  },
  {
    "message": "When using mongoose and defining the schema for documents of a particular collection, are there any restrictions I should be aware of when adding to the structure and organization of my database?"
  },
  {
    "message": "Are there other technologies like MongoDB in the industry that we might come across or should be aware of?"
  },
  {
    "message": "Is MongoDB the database standard in the professional industry? Max refers to \"the professional way\" a lot."
  },
  { "message": "Are there any other popular tools that work with MongoDB?" },
  {
    "message": "I noticed that Max replaced the product class with a product schema. Does mongoose require a schema?"
  },
  { "message": "Can you use Mongoose without using MongoDB?" },
  {
    "message": "What is good practice to keep your data structured while using mongoose and MongoDB?"
  },
  {
    "message": "Are there really any disadvantages to using Mongoose? It seems like it makes things a lot easier."
  },
  { "message": "Can Mongoose just be thought of as a kind of framework?" },
  {
    "message": "Do people ever use MongoDB without Mongoose, or is it pretty much implied if you're using MongoDB you're interacting with it through Mongoose?"
  },
  {
    "message": "What is the current popularity of Mongoose and MongoDB over SQL and Sequelize?"
  },
  {
    "message": "Am I allowed to say myModel.save() because when I create a new model, I get these inheritance functions from mongoose or is it from something else? Is there a way to name my collection and not have it based off the name of my model?"
  },
  {
    "message": "How would we use a front end framework as the 'view' part of the MVC pattern? Do we still install it using npm, and how would we install it in an existing project?"
  },
  {
    "message": "In what type of application would you use the MVC controller?"
  },
  {
    "message": "I've read a few articles that note that MVC is on it's way out, but what will be replacing it?"
  },
  {
    "message": "What would be the best way to structure your controllers? Max talks about sorting them by prefix, which actually makes a lot of sense but what is the standard way? Is there a standard? Or, would every organization have their own requirements?"
  },
  {
    "message": "Is MVC the most common pattern for building larger applications in modern web development? Or should we begin implementing this kind of pattern into smaller projects as well?"
  },
  {
    "message": "What are the alternatives to structuring/displaying your data without using MVC?"
  },
  {
    "message": "I feel like there are so many ways to organize your code for optimization, etc. Is there a general reference that we can use to organize our code where we can never go wrong with it?"
  },
  {
    "message": "Does splitting our code into so many files effect how efficiently it runs?"
  },
  {
    "message": "Is MVC used exclusively with Node or are there other languages/frameworks that use it too?"
  },
  {
    "message": "Is there a more efficient way to fetch and save the products? I don't understand how the getProductFromFile function is being used to both fetch and save."
  },
  { "message": "Can you explain further how static is used in js?" },
  {
    "message": "Is MVC considered mandatory in all projects, or just ones with lots of changing data?"
  },
  {
    "message": "Are there any other patterns for structuring an application other than MVC?"
  },
  {
    "message": "Is there a situation where you would want to create files for storing information instead of using a database?"
  },
  {
    "message": "Apart from REPL to test your quick code, are there any platforms to test, and debug your code?"
  },
  {
    "message": "How long has NodeJS been around for? And when would you ever want to choose PHP over NodeJS?"
  },
  { "message": "Does Node JS have any front-end utility?" },
  {
    "message": "After spending a bit of time in PHP i'm excited to see how much more efficient things will be with node. I'm curious though, are there any clear advantages that PHP has over node?"
  },
  {
    "message": "It sounds like we use the REPL for quick testing but does it offer any other uses?"
  },
  {
    "message": "I thought it was really cool how you could write \" fs . writeFileSync ( 'hello.txt' , 'Hello from Node.js' ); \" but can this also write files for anything from \"hello.php\", \"README.md\" to even simple word documents, unlike \"hello.txt\"?"
  },
  {
    "message": "As NodeJS is written in C++ would we ever come across a scenario where we would see it or need to use it?"
  },
  {
    "message": "Since Node can run on a local machine with access to files and such. Is it ever used to create native desktop apps?"
  },
  {
    "message": "It sounds like NodeJS is much faster and more efficient when it comes to the server side environment and handling large amounts of simultaneous connections. Are their any disadvantages to using NodeJS?"
  },
  {
    "message": "Is NodeJS good for larger server systems as well as smaller servers? Is this something that larger companies would use for their servers?"
  },
  {
    "message": "I do not really have a question at this point but I do remember downloading NodeJS for the last course dgm-3790 seems like we used it to build tools on our internal machines. I look forward to learning about NodeJS."
  },
  {
    "message": "Are there any extensions for Visual Studio Code that make writing Node.js code easier?"
  },
  {
    "message": "Looks exciting. Sorry if this is obvious, but is there ever a context when a developer would use both a mix of Nodejs and PHP on a project, or is it just one or the other?"
  },
  {
    "message": "There isnt too much content to be curious about in this section however, I am curious how much real node developers often use the REPL instead of files? Especially when you have the JS engine in the browser for quick calculations and testing and then files that we can run with node where the code would actually be saved."
  },
  {
    "message": "Is setting the header always required? Where is the information being sent to?"
  },
  {
    "message": "In what circumstance would you want to use the write.FileSync method instead of just the write.File method?"
  },
  {
    "message": "From what I understand about Blocking and Non-Blocking Code, blocking means that a given thread cannot do anything more until the IO is fully received, and non-blocking means an IO request is queued straight away and the function returns.\nShould we be concerned about whether we need to block code or not to block code? and what are the pros and cons of blocking and non-blocking IO?"
  },
  {
    "message": "This might be a dumb question, but what did Max mean when mentioning single-thread and multi-thread JS."
  },
  {
    "message": "I like the idea of the nodejs lifecycle and event loop. Could we look into how vue or react work and play into the nodejs loop?"
  },
  {
    "message": "Is the writeFile method only used for text files or are there cases when we would use it for other file types?"
  },
  {
    "message": "In lesson 33, Max makes a data request that pushes each data chunk to an array which he then logs to the console. What determines those data chunk values?"
  },
  {
    "message": "This might be a stupid question, but with the recent enforcement by Google to make your website https, rather than http, is there a correlation between http.createServer and https.createServer? Is that even a thing?"
  },
  {
    "message": "So the message.txt file just shows up in VSCode once something is submitted with the form.  Is the file creation supposed to go somewhere else when the server is actually set up or is this just for development purposes?"
  },
  {
    "message": "I would also like further explanation on Buffering and Node's event loop process."
  },
  {
    "message": "Why did Max set the status of his message page to 302, and the location in his header to forward slash? Could you better explain the buffer?"
  },
  {
    "message": "What is the data transfered in from a browser in the format? Why do I need a parser in order to read it and why would node remove the parser from its core modules?"
  },
  {
    "message": "stepping through seems like a pretty fast and easy way to debug once you get the hang of it. Is it common in the industry to practice that rather than console.log-ing?"
  },
  { "message": "What is nodemon actually doing behind the scenes?" },
  { "message": "What vscode extensions would you recommend for node/express?" },
  {
    "message": "Wouldn't it be more convenient to have Nodemon installed globally instead of locally?"
  },
  {
    "message": "When using debugging tools, I like that you can pause the execution of your application at specific points in the code, and inspect the values of each variable while the program is still running. Are we able to modify these values as well?"
  },
  {
    "message": "Would you need a debugger in order to see runtime errors? Or only for logical errors?"
  },
  {
    "message": "Why would we not just install all packages globally? It seems useless to only install them for specific projects we work on."
  },
  {
    "message": "I've heard it's really easy for hackers and such to add malicious content to NPM packages. Is there an easy way to tell if a 3rd party packages are safe?"
  },
  {
    "message": "What are some pros/cons of installing a package like nodemon locally vs globally?"
  },
  {
    "message": "Wouldn't console.log be the most reliable way to \"test\" or \"debug\" the code to make sure it works?"
  },
  {
    "message": "Debugging the way that Max shows us seems to be very tedious.  Is there a plugin or something that would make this even easier?"
  },
  {
    "message": "It seems like relying on 3rd party packages like express are the norm when working with nodejs. Is there a way to install all the \"usual\" 3rd party packages (ex: nodemon, express) at once when initializing a project, or do you need to remember to install each of them case by case?"
  },
  {
    "message": "Is the Visual Studio Code debugger usually sufficient or are there other 3rd party packages that would make debugging even easier?"
  },
  {
    "message": "I use console log really often to trace my data points instead of using the \"step through\" feature in VS code. Is console.log industry standard or is step through code much more used and should I get used to using that?"
  },
  {
    "message": "When installing a package, what is the difference between save and save dev?"
  },
  {
    "message": "Is it common to use NodeJs and Express for just building simple static websites that don't rely on a database?"
  },
  {
    "message": "How should we approach structuring our middleware so we don't get overlap with different views?"
  },
  {
    "message": "Should we always put NEXT as an argument in our functions in the middlewares we create, or should we be more specific to help readability, or does it matter?"
  },
  {
    "message": "Is it absolutely necessary to put a res.status(404).send(' Page Not Found '); instead of just putting a html document saying page not found?"
  },
  {
    "message": "What is \"module.exports = router\" and how is it different than \"exports.routes = router\"?"
  },
  {
    "message": "Is any package that is installed after the initial install of a project just called middleware? For example, axios with VueJS?"
  },
  {
    "message": "Is there ever a time you'd want to use 'app.use' in place of 'app.get' or 'app.post'?"
  },
  {
    "message": "Besides just being able to set your own redirect pages like customizing a 404 page, what else can you do with node that you can't do with just regular javascript."
  },
  {
    "message": "Anything to look for or risks to consider before installing third party NPM packages?"
  },
  {
    "message": "It's starting to come together, but the practical use of some of this isn't quite clicking yet. Is NodeJS typically used for routing an entire project like this? It just seems like a really inefficient way of serving HTML pages to users."
  },
  {
    "message": "Are there any further Node.js Router packages that we have to install and learn or is everything we need already included with Express.js?"
  },
  { "message": "Why isnt body parser built into express anymore?" },
  {
    "message": "What kind of features do you want to have in a good template engine? With so many out there, and being so new to working with template engines, it would be nice to know what are the most powerful features to have in a good template engine."
  },
  { "message": "How would you store the data permanently?" },
  {
    "message": "How do we incorporate frameworks such as VueJS or ReactJS when it comes to templating engines?"
  },
  {
    "message": "Is there a benefit with going with a templating engine that doesn't include Javascript?"
  },
  {
    "message": "Will we be needing to use any of the other tags that EJS has?"
  },
  {
    "message": "What is the default most used template engine in the industry today?"
  },
  {
    "message": "EJS seems like the templating tool to use with express because it is already baked in. Does that mean it works better than the others and we would have less of an issue in terms of bugs while using it compared to third-party templating engines?"
  },
  { "message": "Do you have to use Express with EJS?" },
  {
    "message": "It seems like using EJS as a templating engine is a no-brainer.  What would be the benefit of using PUG of Handlebars over EJS? Are there any benefits?"
  },
  {
    "message": "Why does the express app need granted access to the public folder where we store our css?\n\napp . use ( express . static ( path . join (__dirname , ' public ' ))) ;"
  },
  {
    "message": "Is the 'view engine' only used to compile your views into HTML?"
  },
  {
    "message": "With EJS, what are the equals and minus symbols called that follow the % symbol? Are there more of these that we should be aware of?"
  },
  {
    "message": "I know Max prefers EJS, but is there a clear front-runner for templating languages in the industry?"
  },
  {
    "message": "Are there templating engines that are just faster than others? And does the variable substitution happen on the server?"
  },
  {
    "message": "I've heard both SQL and NoSQL databases have their pros and cons. Is one better than the other when it comes to scaling an application? Do any out-perform the others when it comes to storing large amounts of data?"
  },
  { "message": "How does MongoDB handle security and storing user data?" },
  {
    "message": "What exactly is a Cluster in MongoDB and is it common to have multiple clusters in a large project?"
  },
  {
    "message": "Is MongoDB the standard database used in developing applications? What other types of databases are out there for building different types of applications?"
  },
  {
    "message": "I can see the benefits of NoSQL being faster and more flexible, but it seems a little more confusing because you are not forced to keep the structure of the DB as you do with SQL. For reporting and other analytical data, how is that managed? Does MongoDB have its own way of handling that?"
  },
  { "message": "Does MongoDB have a backup feature?" },
  { "message": "Is MongoDB the most widely used NoSQL database?" },
  {
    "message": "Max talked about security within MongoDB regarding the IP Addresses. Is there other forms of database security?"
  },
  {
    "message": "What's the difference between SQL and NoSQL and why would it be better to use NoSQL?"
  },
  { "message": "What are some differences between JSON and BSON?" },
  {
    "message": "Is there ever a context where it's preferable to run a MongoDB database on your own server, or is it pretty much always best practice just to use an external cloud service?"
  },
  {
    "message": "How does MongoDB compare to other database products like Firebase?"
  },
  {
    "message": "I have heard that NoSQL DBs are better and quicker at dealing with large amounts of data. Is this true and why?"
  },
  {
    "message": "This might be random and out of question, but if there even a way to use authentication without cookies?"
  },
  {
    "message": "I notice while browsing the web, that most sites have some kind of indicator saying they are using cookies. Are there any regulations, requirements, or good practices when using cookies on live sites?"
  },
  { "message": "As far as security goes, are sessions or cookies better?" },
  {
    "message": "So we know cookies are good for storing data across requests.. what are they also good for?"
  },
  {
    "message": "Do all websites have access to view all the cookies stored in your browser? Is that why we need to encrypt secure information like session ids?"
  },
  { "message": "What other data is possible to store via session or cookie?" },
  {
    "message": "Which is better to use for managing login authentication data, sessions or cookies?"
  },
  {
    "message": "1. Where are cookies stored locally in the browser? 2. How can a cookie be saved after exiting the browser without storing in a session? 3. What data is most commonly stored using cookies?"
  },
  {
    "message": "Is it law to mention that your site uses cookies(or sessions)? Or is that just a best practice?"
  },
  {
    "message": "So cookies are in the browser, and sessions are on the server. Are there best practices as to when to use cookies over sessions? Because sessions are on the server, they inherently require more server power or queries. I have heard it is best to store user data using cookies, and admin data using sessions. Are there other types of data that would benefit from being stored in sessions?"
  },
  {
    "message": "Since we're going to be using Nodejs in conjunction with vuejs, would it be preferable to set cookies using node or vue? Is it bad practice to interact with/alter cookies using vue when the cookie is created with node?"
  },
  {
    "message": "Are there any other authentication options other than sessions & cookies?"
  },
  { "message": "Are sessions used for rest api?" }
]
